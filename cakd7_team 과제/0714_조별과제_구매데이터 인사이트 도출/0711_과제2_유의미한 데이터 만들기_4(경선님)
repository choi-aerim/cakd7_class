{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c8487d5f",
   "metadata": {},
   "source": [
    "# 과제\n",
    "아래 가이드에 따라 고객별 연간 구매데이터를 생성하고 아래사항을 수행하기(관측치 1,000개)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "021e523a",
   "metadata": {},
   "source": [
    "#### Q1. 고객 속성(id, 성별, 연령, 거주지역) 데이터와 거래 데이터를 통합한 데이터 프레임 df를 생성하세요.\n",
    "\n",
    "거래 번호\n",
    "- id : 1 ~ 1000번 일련번호 - 개시 후 1천 건의 거래가 있었고 거기에 넘버링한 거라고 이해해보자\n",
    "\n",
    "고객별 속성 데이터\n",
    "- cusno : 고객번호 1000개 랜덤(1,000명의 고객데이터가 있는 것)\n",
    "- gender : 0,1 정수 난수 생성\n",
    "- age : 0 ~ 80사이 정수 난수 생성\n",
    "- region : 1 ~ 10 사이 정수 난수 생성\n",
    "\n",
    "거래 데이터\n",
    "- (date : 2020-01-01 ~ 2021-12-31 사이의 날짜 1000개 생성)\n",
    "- (day : 요일)\n",
    "- (time_20 : 01 ~ 24 사이 정수 난수 생성)\n",
    "- (time_21 : 01 ~ 24 사이 정수 난수 생성)\n",
    "- product_20 : 고가제품(10), 중가제품(20), 저가제품(30)로 구분제품코드 10,20,30\n",
    "- product_21 : 고가제품(10), 중가제품(20), 저가제품(30)로 구분제품코드 10,20,30\n",
    "- price_20 : 1000 ~ 50000 사이 실수 난수 생성\n",
    "- price_21 : 1000 ~ 50000 사이 실수 난수 생성\n",
    "- quantity_20 : 1 ~ 100 사이 정수 난수 생성\n",
    "- quantity_21 : 1 ~ 100 사이 정수 난수 생성\n",
    "- amount_20 : price_20 * quantity_20\n",
    "- amount_21 : price_21 * quantity_21\n",
    "- sales : 20년 대비 21년구매금액이 증가면 1, 감소면 0\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d82dd3c",
   "metadata": {},
   "source": [
    "## 컨셉: 쿠팡 구매데이터"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1718e4e",
   "metadata": {},
   "source": [
    "## 1. 랜덤 데이터 생성"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 349,
   "id": "5981192b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import random\n",
    "from datetime import datetime \n",
    "import time\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "random.seed(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2175330a",
   "metadata": {},
   "source": [
    "### 고객 속성 데이터프레임 만들기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 350,
   "id": "1d71eaf8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#고객별 속성 데이터프레임 만들기\n",
    "\n",
    "cusno=np.arange(1001,2001)\n",
    "#cusno=random.sample(list(range(1000,9000)),1000)\n",
    "gender=np.random.choice([0,1],size=1000)\n",
    "age=np.random.randint(10,70,size=1000)\n",
    "region=np.random.randint(1,11,size=1000)   #지역 대신 유입경로 변수로 변환"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 351,
   "id": "209e47d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1002</td>\n",
       "      <td>0</td>\n",
       "      <td>39</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1003</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1004</td>\n",
       "      <td>0</td>\n",
       "      <td>25</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1005</td>\n",
       "      <td>0</td>\n",
       "      <td>54</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age  region\n",
       "0   1001       1   62       2\n",
       "1   1002       0   39       5\n",
       "2   1003       1   12       7\n",
       "3   1004       0   25       2\n",
       "4   1005       0   54       3"
      ]
     },
     "execution_count": 351,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#배열-> 시리즈\n",
    "cusno=pd.Series(cusno)\n",
    "gender=pd.Series(gender)\n",
    "age=pd.Series(age)\n",
    "region=pd.Series(region)\n",
    "\n",
    "#데이터프레임 만들기\n",
    "customer=pd.concat([cusno,gender,age,region],axis=1)\n",
    "\n",
    "#컬럼명 지정\n",
    "customer.columns=['cusno','gender','age','region']\n",
    "\n",
    "customer.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e13da3e3",
   "metadata": {},
   "source": [
    "### 거래 데이터프레임 만들기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 352,
   "id": "2719fd9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#빈 데이터프레임 만들기\n",
    "purchase=pd.DataFrame(columns=['id','cusno','product','price','quantity','amount'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 353,
   "id": "53557bf2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#기본 데이터 만들기\n",
    "\n",
    "\n",
    "#1. 거래 id 만들기\n",
    "id=random.sample(list(range(10000,50000)),10000)\n",
    "\n",
    "#2. 중복 cusno 만들기\n",
    "cusno=np.random.randint(1001,2001,size=10000)      #기존 cusno가 중복될 수 있도록 만들기\n",
    "\n",
    "#3. 기본거래 데이터 만들기\n",
    "#product=np.random.choice([10,20,30],size=10000)\n",
    "product=[random.randrange(10,40,10) for i in range(10000)]\n",
    "price=np.random.uniform(1000,50000,size=10000).round(2)\n",
    "quantity=np.random.randint(1,100,size=10000)\n",
    "amount=price*quantity\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 354,
   "id": "cbd5da57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>cusno</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18805</td>\n",
       "      <td>1752</td>\n",
       "      <td>30</td>\n",
       "      <td>38793.95</td>\n",
       "      <td>81</td>\n",
       "      <td>3142309.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>47303</td>\n",
       "      <td>1574</td>\n",
       "      <td>10</td>\n",
       "      <td>28205.13</td>\n",
       "      <td>35</td>\n",
       "      <td>987179.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14135</td>\n",
       "      <td>1814</td>\n",
       "      <td>20</td>\n",
       "      <td>45647.54</td>\n",
       "      <td>86</td>\n",
       "      <td>3925688.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>26716</td>\n",
       "      <td>1527</td>\n",
       "      <td>10</td>\n",
       "      <td>19245.57</td>\n",
       "      <td>20</td>\n",
       "      <td>384911.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17727</td>\n",
       "      <td>1396</td>\n",
       "      <td>30</td>\n",
       "      <td>22495.33</td>\n",
       "      <td>12</td>\n",
       "      <td>269943.96</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id  cusno  product     price  quantity      amount\n",
       "0  18805   1752       30  38793.95        81  3142309.95\n",
       "1  47303   1574       10  28205.13        35   987179.55\n",
       "2  14135   1814       20  45647.54        86  3925688.44\n",
       "3  26716   1527       10  19245.57        20   384911.40\n",
       "4  17727   1396       30  22495.33        12   269943.96"
      ]
     },
     "execution_count": 354,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#데이터프레임 채우기\n",
    "\n",
    "purchase['id']=id\n",
    "purchase['cusno']=cusno\n",
    "purchase['product']=product\n",
    "purchase['price']=price\n",
    "purchase['quantity']=quantity\n",
    "purchase['amount']=amount\n",
    "\n",
    "\n",
    "purchase.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 355,
   "id": "66fd5014",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>cusno</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18805</td>\n",
       "      <td>1752</td>\n",
       "      <td>30</td>\n",
       "      <td>38793.95</td>\n",
       "      <td>81</td>\n",
       "      <td>3142309.95</td>\n",
       "      <td>2021-05-05</td>\n",
       "      <td>수</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>47303</td>\n",
       "      <td>1574</td>\n",
       "      <td>10</td>\n",
       "      <td>28205.13</td>\n",
       "      <td>35</td>\n",
       "      <td>987179.55</td>\n",
       "      <td>2020-01-10</td>\n",
       "      <td>금</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>14135</td>\n",
       "      <td>1814</td>\n",
       "      <td>20</td>\n",
       "      <td>45647.54</td>\n",
       "      <td>86</td>\n",
       "      <td>3925688.44</td>\n",
       "      <td>2021-01-26</td>\n",
       "      <td>화</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>26716</td>\n",
       "      <td>1527</td>\n",
       "      <td>10</td>\n",
       "      <td>19245.57</td>\n",
       "      <td>20</td>\n",
       "      <td>384911.40</td>\n",
       "      <td>2020-12-21</td>\n",
       "      <td>월</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17727</td>\n",
       "      <td>1396</td>\n",
       "      <td>30</td>\n",
       "      <td>22495.33</td>\n",
       "      <td>12</td>\n",
       "      <td>269943.96</td>\n",
       "      <td>2020-10-26</td>\n",
       "      <td>월</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      id  cusno  product     price  quantity      amount       date day  time\n",
       "0  18805   1752       30  38793.95        81  3142309.95 2021-05-05   수     9\n",
       "1  47303   1574       10  28205.13        35   987179.55 2020-01-10   금    17\n",
       "2  14135   1814       20  45647.54        86  3925688.44 2021-01-26   화     5\n",
       "3  26716   1527       10  19245.57        20   384911.40 2020-12-21   월     9\n",
       "4  17727   1396       30  22495.33        12   269943.96 2020-10-26   월     8"
      ]
     },
     "execution_count": 355,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#날짜 데이터 만들기\n",
    "\n",
    "    \n",
    "#1.date \n",
    "date_list=list(pd.date_range('2020-01-01','2021-12-31',freq='D'))     #랜덤 선택을 위한 date 리스트\n",
    "\n",
    "purchase['date']=np.random.choice(date_list,size=10000)\n",
    "\n",
    "#2. day(요일) \n",
    "purchase['day']=purchase['date'].apply(lambda x: x.weekday())         #date별 요일을 숫자로 나타냄\n",
    "purchase['day']=purchase['day'].replace(list(range(7)),['월','화','수','목','금','토','일'])\n",
    "\n",
    "#3. 시간\n",
    "purchase['time']=np.random.randint(1,25,size=10000)\n",
    "\n",
    "\n",
    "purchase.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 356,
   "id": "4c21f483",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10000 entries, 0 to 9999\n",
      "Data columns (total 9 columns):\n",
      " #   Column    Non-Null Count  Dtype         \n",
      "---  ------    --------------  -----         \n",
      " 0   id        10000 non-null  int64         \n",
      " 1   cusno     10000 non-null  int32         \n",
      " 2   product   10000 non-null  int64         \n",
      " 3   price     10000 non-null  float64       \n",
      " 4   quantity  10000 non-null  int32         \n",
      " 5   amount    10000 non-null  float64       \n",
      " 6   date      10000 non-null  datetime64[ns]\n",
      " 7   day       10000 non-null  object        \n",
      " 8   time      10000 non-null  int32         \n",
      "dtypes: datetime64[ns](1), float64(2), int32(3), int64(2), object(1)\n",
      "memory usage: 586.1+ KB\n"
     ]
    }
   ],
   "source": [
    "#거래 데이터타입 확인\n",
    "\n",
    "purchase.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 357,
   "id": "8d3267ef",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>cusno</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2118805</td>\n",
       "      <td>1752</td>\n",
       "      <td>30</td>\n",
       "      <td>38793.95</td>\n",
       "      <td>81</td>\n",
       "      <td>3142309.95</td>\n",
       "      <td>2021-05-05</td>\n",
       "      <td>수</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2047303</td>\n",
       "      <td>1574</td>\n",
       "      <td>10</td>\n",
       "      <td>28205.13</td>\n",
       "      <td>35</td>\n",
       "      <td>987179.55</td>\n",
       "      <td>2020-01-10</td>\n",
       "      <td>금</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2114135</td>\n",
       "      <td>1814</td>\n",
       "      <td>20</td>\n",
       "      <td>45647.54</td>\n",
       "      <td>86</td>\n",
       "      <td>3925688.44</td>\n",
       "      <td>2021-01-26</td>\n",
       "      <td>화</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2026716</td>\n",
       "      <td>1527</td>\n",
       "      <td>10</td>\n",
       "      <td>19245.57</td>\n",
       "      <td>20</td>\n",
       "      <td>384911.40</td>\n",
       "      <td>2020-12-21</td>\n",
       "      <td>월</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017727</td>\n",
       "      <td>1396</td>\n",
       "      <td>30</td>\n",
       "      <td>22495.33</td>\n",
       "      <td>12</td>\n",
       "      <td>269943.96</td>\n",
       "      <td>2020-10-26</td>\n",
       "      <td>월</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        id  cusno  product     price  quantity      amount       date day  \\\n",
       "0  2118805   1752       30  38793.95        81  3142309.95 2021-05-05   수   \n",
       "1  2047303   1574       10  28205.13        35   987179.55 2020-01-10   금   \n",
       "2  2114135   1814       20  45647.54        86  3925688.44 2021-01-26   화   \n",
       "3  2026716   1527       10  19245.57        20   384911.40 2020-12-21   월   \n",
       "4  2017727   1396       30  22495.33        12   269943.96 2020-10-26   월   \n",
       "\n",
       "   time  \n",
       "0     9  \n",
       "1    17  \n",
       "2     5  \n",
       "3     9  \n",
       "4     8  "
      ]
     },
     "execution_count": 357,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#id 변수 데이터 변환: id 앞에 연도 표시하기\n",
    "\n",
    "purchase['id']=purchase.apply(lambda x: str(x.date.year-2000)+str(x.id), axis=1)\n",
    "purchase.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 358,
   "id": "51b29b19",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "      <th>id</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2145229</td>\n",
       "      <td>10</td>\n",
       "      <td>44255.51</td>\n",
       "      <td>53</td>\n",
       "      <td>2345542.03</td>\n",
       "      <td>2021-03-29</td>\n",
       "      <td>월</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2114960</td>\n",
       "      <td>30</td>\n",
       "      <td>19383.32</td>\n",
       "      <td>74</td>\n",
       "      <td>1434365.68</td>\n",
       "      <td>2021-11-05</td>\n",
       "      <td>금</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2128640</td>\n",
       "      <td>20</td>\n",
       "      <td>16426.44</td>\n",
       "      <td>98</td>\n",
       "      <td>1609791.12</td>\n",
       "      <td>2021-09-08</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2121938</td>\n",
       "      <td>10</td>\n",
       "      <td>47073.60</td>\n",
       "      <td>19</td>\n",
       "      <td>894398.40</td>\n",
       "      <td>2021-08-07</td>\n",
       "      <td>토</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2127272</td>\n",
       "      <td>20</td>\n",
       "      <td>22279.72</td>\n",
       "      <td>82</td>\n",
       "      <td>1826937.04</td>\n",
       "      <td>2021-05-31</td>\n",
       "      <td>월</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2049259</td>\n",
       "      <td>20</td>\n",
       "      <td>17254.56</td>\n",
       "      <td>60</td>\n",
       "      <td>1035273.60</td>\n",
       "      <td>2020-01-31</td>\n",
       "      <td>금</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2118097</td>\n",
       "      <td>20</td>\n",
       "      <td>28804.24</td>\n",
       "      <td>1</td>\n",
       "      <td>28804.24</td>\n",
       "      <td>2021-09-09</td>\n",
       "      <td>목</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2041162</td>\n",
       "      <td>20</td>\n",
       "      <td>33250.71</td>\n",
       "      <td>54</td>\n",
       "      <td>1795538.34</td>\n",
       "      <td>2020-03-21</td>\n",
       "      <td>토</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2140447</td>\n",
       "      <td>30</td>\n",
       "      <td>24786.87</td>\n",
       "      <td>99</td>\n",
       "      <td>2453900.13</td>\n",
       "      <td>2021-07-30</td>\n",
       "      <td>금</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1001</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2111791</td>\n",
       "      <td>10</td>\n",
       "      <td>26475.68</td>\n",
       "      <td>23</td>\n",
       "      <td>608940.64</td>\n",
       "      <td>2021-06-30</td>\n",
       "      <td>수</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age  region       id  product     price  quantity  \\\n",
       "0   1001       1   62       2  2145229       10  44255.51        53   \n",
       "1   1001       1   62       2  2114960       30  19383.32        74   \n",
       "2   1001       1   62       2  2128640       20  16426.44        98   \n",
       "3   1001       1   62       2  2121938       10  47073.60        19   \n",
       "4   1001       1   62       2  2127272       20  22279.72        82   \n",
       "5   1001       1   62       2  2049259       20  17254.56        60   \n",
       "6   1001       1   62       2  2118097       20  28804.24         1   \n",
       "7   1001       1   62       2  2041162       20  33250.71        54   \n",
       "8   1001       1   62       2  2140447       30  24786.87        99   \n",
       "9   1001       1   62       2  2111791       10  26475.68        23   \n",
       "\n",
       "       amount       date day  time  \n",
       "0  2345542.03 2021-03-29   월    12  \n",
       "1  1434365.68 2021-11-05   금    11  \n",
       "2  1609791.12 2021-09-08   수    11  \n",
       "3   894398.40 2021-08-07   토    20  \n",
       "4  1826937.04 2021-05-31   월    24  \n",
       "5  1035273.60 2020-01-31   금    12  \n",
       "6    28804.24 2021-09-09   목    10  \n",
       "7  1795538.34 2020-03-21   토    11  \n",
       "8  2453900.13 2021-07-30   금    19  \n",
       "9   608940.64 2021-06-30   수    19  "
      ]
     },
     "execution_count": 358,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#데이터프레임 통합: 공통 변수 cusno를 활용해 데이터 결합\n",
    "\n",
    "df=customer.merge(purchase,on='cusno',how='outer')\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 359,
   "id": "1e1653db",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 10000 entries, 0 to 9999\n",
      "Data columns (total 12 columns):\n",
      " #   Column    Non-Null Count  Dtype         \n",
      "---  ------    --------------  -----         \n",
      " 0   cusno     10000 non-null  int32         \n",
      " 1   gender    10000 non-null  int32         \n",
      " 2   age       10000 non-null  int32         \n",
      " 3   region    10000 non-null  int32         \n",
      " 4   id        10000 non-null  object        \n",
      " 5   product   10000 non-null  int64         \n",
      " 6   price     10000 non-null  float64       \n",
      " 7   quantity  10000 non-null  int32         \n",
      " 8   amount    10000 non-null  float64       \n",
      " 9   date      10000 non-null  datetime64[ns]\n",
      " 10  day       10000 non-null  object        \n",
      " 11  time      10000 non-null  int32         \n",
      "dtypes: datetime64[ns](1), float64(2), int32(6), int64(1), object(2)\n",
      "memory usage: 781.2+ KB\n"
     ]
    }
   ],
   "source": [
    "#데이터프레임 확인\n",
    "\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db3aaa3c",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4626d294",
   "metadata": {},
   "source": [
    "## 2. 데이터 전처리"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca609075",
   "metadata": {},
   "source": [
    "### 변수의 데이터타입 변환"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 360,
   "id": "c4025b30",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "      <th>id</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2145229</td>\n",
       "      <td>10</td>\n",
       "      <td>44255.51</td>\n",
       "      <td>53</td>\n",
       "      <td>2345542.03</td>\n",
       "      <td>2021-03-29</td>\n",
       "      <td>월</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2114960</td>\n",
       "      <td>30</td>\n",
       "      <td>19383.32</td>\n",
       "      <td>74</td>\n",
       "      <td>1434365.68</td>\n",
       "      <td>2021-11-05</td>\n",
       "      <td>금</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2128640</td>\n",
       "      <td>20</td>\n",
       "      <td>16426.44</td>\n",
       "      <td>98</td>\n",
       "      <td>1609791.12</td>\n",
       "      <td>2021-09-08</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2121938</td>\n",
       "      <td>10</td>\n",
       "      <td>47073.60</td>\n",
       "      <td>19</td>\n",
       "      <td>894398.40</td>\n",
       "      <td>2021-08-07</td>\n",
       "      <td>토</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>2127272</td>\n",
       "      <td>20</td>\n",
       "      <td>22279.72</td>\n",
       "      <td>82</td>\n",
       "      <td>1826937.04</td>\n",
       "      <td>2021-05-31</td>\n",
       "      <td>월</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age  region       id  product     price  quantity  \\\n",
       "0   1001  female   62       2  2145229       10  44255.51        53   \n",
       "1   1001  female   62       2  2114960       30  19383.32        74   \n",
       "2   1001  female   62       2  2128640       20  16426.44        98   \n",
       "3   1001  female   62       2  2121938       10  47073.60        19   \n",
       "4   1001  female   62       2  2127272       20  22279.72        82   \n",
       "\n",
       "       amount       date day  time  \n",
       "0  2345542.03 2021-03-29   월    12  \n",
       "1  1434365.68 2021-11-05   금    11  \n",
       "2  1609791.12 2021-09-08   수    11  \n",
       "3   894398.40 2021-08-07   토    20  \n",
       "4  1826937.04 2021-05-31   월    24  "
      ]
     },
     "execution_count": 360,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#gender 변수 문자화\n",
    "\n",
    "df['gender'].replace({0:'male',1:'female'}, inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 361,
   "id": "7fb189dc",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "      <th>id</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2145229</td>\n",
       "      <td>10</td>\n",
       "      <td>44255.51</td>\n",
       "      <td>53</td>\n",
       "      <td>2345542.03</td>\n",
       "      <td>2021-03-29</td>\n",
       "      <td>월</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2114960</td>\n",
       "      <td>30</td>\n",
       "      <td>19383.32</td>\n",
       "      <td>74</td>\n",
       "      <td>1434365.68</td>\n",
       "      <td>2021-11-05</td>\n",
       "      <td>금</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2128640</td>\n",
       "      <td>20</td>\n",
       "      <td>16426.44</td>\n",
       "      <td>98</td>\n",
       "      <td>1609791.12</td>\n",
       "      <td>2021-09-08</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2121938</td>\n",
       "      <td>10</td>\n",
       "      <td>47073.60</td>\n",
       "      <td>19</td>\n",
       "      <td>894398.40</td>\n",
       "      <td>2021-08-07</td>\n",
       "      <td>토</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2127272</td>\n",
       "      <td>20</td>\n",
       "      <td>22279.72</td>\n",
       "      <td>82</td>\n",
       "      <td>1826937.04</td>\n",
       "      <td>2021-05-31</td>\n",
       "      <td>월</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age region       id  product     price  quantity  \\\n",
       "0   1001  female   62     경기  2145229       10  44255.51        53   \n",
       "1   1001  female   62     경기  2114960       30  19383.32        74   \n",
       "2   1001  female   62     경기  2128640       20  16426.44        98   \n",
       "3   1001  female   62     경기  2121938       10  47073.60        19   \n",
       "4   1001  female   62     경기  2127272       20  22279.72        82   \n",
       "\n",
       "       amount       date day  time  \n",
       "0  2345542.03 2021-03-29   월    12  \n",
       "1  1434365.68 2021-11-05   금    11  \n",
       "2  1609791.12 2021-09-08   수    11  \n",
       "3   894398.40 2021-08-07   토    20  \n",
       "4  1826937.04 2021-05-31   월    24  "
      ]
     },
     "execution_count": 361,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#region 변수 문자화\n",
    "\n",
    "df['region'].replace({1:'서울', \n",
    "                      2:'경기',\n",
    "                      3:'부산',\n",
    "                      4:'강원',\n",
    "                      5:'충북',\n",
    "                      6:'충남',\n",
    "                      7:'전남',\n",
    "                      8:'전북',\n",
    "                      9:'경남',\n",
    "                      10:'경북',                      \n",
    "                     },inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 362,
   "id": "8068280d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "      <th>id</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>age_c</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2145229</td>\n",
       "      <td>10</td>\n",
       "      <td>44255.51</td>\n",
       "      <td>53</td>\n",
       "      <td>2345542.03</td>\n",
       "      <td>2021-03-29</td>\n",
       "      <td>월</td>\n",
       "      <td>12</td>\n",
       "      <td>60대</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2114960</td>\n",
       "      <td>30</td>\n",
       "      <td>19383.32</td>\n",
       "      <td>74</td>\n",
       "      <td>1434365.68</td>\n",
       "      <td>2021-11-05</td>\n",
       "      <td>금</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2128640</td>\n",
       "      <td>20</td>\n",
       "      <td>16426.44</td>\n",
       "      <td>98</td>\n",
       "      <td>1609791.12</td>\n",
       "      <td>2021-09-08</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2121938</td>\n",
       "      <td>10</td>\n",
       "      <td>47073.60</td>\n",
       "      <td>19</td>\n",
       "      <td>894398.40</td>\n",
       "      <td>2021-08-07</td>\n",
       "      <td>토</td>\n",
       "      <td>20</td>\n",
       "      <td>60대</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2127272</td>\n",
       "      <td>20</td>\n",
       "      <td>22279.72</td>\n",
       "      <td>82</td>\n",
       "      <td>1826937.04</td>\n",
       "      <td>2021-05-31</td>\n",
       "      <td>월</td>\n",
       "      <td>24</td>\n",
       "      <td>60대</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age region       id  product     price  quantity  \\\n",
       "0   1001  female   62     경기  2145229       10  44255.51        53   \n",
       "1   1001  female   62     경기  2114960       30  19383.32        74   \n",
       "2   1001  female   62     경기  2128640       20  16426.44        98   \n",
       "3   1001  female   62     경기  2121938       10  47073.60        19   \n",
       "4   1001  female   62     경기  2127272       20  22279.72        82   \n",
       "\n",
       "       amount       date day  time age_c  \n",
       "0  2345542.03 2021-03-29   월    12   60대  \n",
       "1  1434365.68 2021-11-05   금    11   60대  \n",
       "2  1609791.12 2021-09-08   수    11   60대  \n",
       "3   894398.40 2021-08-07   토    20   60대  \n",
       "4  1826937.04 2021-05-31   월    24   60대  "
      ]
     },
     "execution_count": 362,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#age 범주화\n",
    "\n",
    "def age_category(x):\n",
    "    y=0\n",
    "    if x<20:\n",
    "        y='10대'\n",
    "    elif x<30:\n",
    "        y='20대'\n",
    "    elif x<40:\n",
    "        y='30대'\n",
    "    elif x<50:\n",
    "        y='40대'\n",
    "    elif x<60:\n",
    "        y='50대'\n",
    "    else:\n",
    "        y='60대'\n",
    "    return y\n",
    "\n",
    "df['age_c']=df['age'].apply(age_category)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a9806e1",
   "metadata": {},
   "source": [
    "### 변수 추가 생성/ 기존 데이터 수정"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 363,
   "id": "12753279",
   "metadata": {},
   "outputs": [],
   "source": [
    "# # 지역컬럼 유입경로로 변경\n",
    "# df.rename(columns={'region':'funnel'},inplace=True)\n",
    "\n",
    "# # 유입경로 값 수정\n",
    "# df['funnel']=np.random.randint(1,5,size=10000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "id": "002add6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "      <th>id</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2145229</td>\n",
       "      <td>10</td>\n",
       "      <td>44255.51</td>\n",
       "      <td>53</td>\n",
       "      <td>2345542.03</td>\n",
       "      <td>2021-03-29</td>\n",
       "      <td>월</td>\n",
       "      <td>12</td>\n",
       "      <td>60대</td>\n",
       "      <td>외부 채널</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2114960</td>\n",
       "      <td>30</td>\n",
       "      <td>19383.32</td>\n",
       "      <td>74</td>\n",
       "      <td>1434365.68</td>\n",
       "      <td>2021-11-05</td>\n",
       "      <td>금</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "      <td>온라인사이트</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2128640</td>\n",
       "      <td>20</td>\n",
       "      <td>16426.44</td>\n",
       "      <td>98</td>\n",
       "      <td>1609791.12</td>\n",
       "      <td>2021-09-08</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "      <td>외부 채널</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2121938</td>\n",
       "      <td>10</td>\n",
       "      <td>47073.60</td>\n",
       "      <td>19</td>\n",
       "      <td>894398.40</td>\n",
       "      <td>2021-08-07</td>\n",
       "      <td>토</td>\n",
       "      <td>20</td>\n",
       "      <td>60대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2127272</td>\n",
       "      <td>20</td>\n",
       "      <td>22279.72</td>\n",
       "      <td>82</td>\n",
       "      <td>1826937.04</td>\n",
       "      <td>2021-05-31</td>\n",
       "      <td>월</td>\n",
       "      <td>24</td>\n",
       "      <td>60대</td>\n",
       "      <td>온라인사이트</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age region       id  product     price  quantity  \\\n",
       "0   1001  female   62     경기  2145229       10  44255.51        53   \n",
       "1   1001  female   62     경기  2114960       30  19383.32        74   \n",
       "2   1001  female   62     경기  2128640       20  16426.44        98   \n",
       "3   1001  female   62     경기  2121938       10  47073.60        19   \n",
       "4   1001  female   62     경기  2127272       20  22279.72        82   \n",
       "\n",
       "       amount       date day  time age_c funnels  \n",
       "0  2345542.03 2021-03-29   월    12   60대   외부 채널  \n",
       "1  1434365.68 2021-11-05   금    11   60대  온라인사이트  \n",
       "2  1609791.12 2021-09-08   수    11   60대   외부 채널  \n",
       "3   894398.40 2021-08-07   토    20   60대   쿠팡 어플  \n",
       "4  1826937.04 2021-05-31   월    24   60대  온라인사이트  "
      ]
     },
     "execution_count": 364,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#유입 경로 코드 추가\n",
    "'''\n",
    "1: sns 홍보사이트(인스타)\n",
    "2: 온라인사이트\n",
    "3: 가격비교 사이트(naver 검색)\n",
    "4: 어플\n",
    "\n",
    "'''\n",
    "\n",
    "df['funnels']=np.random.randint(1,5,size=10000)\n",
    "df['funnels'].replace({1:'sns 홍보사이트', \n",
    "                      2:'온라인사이트',\n",
    "                      3:'외부 채널',\n",
    "                      4:'쿠팡 어플',\n",
    "                    \n",
    "                     },inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 365,
   "id": "39d4c3a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 10000 entries, 0 to 9999\n",
      "Data columns (total 14 columns):\n",
      " #   Column    Non-Null Count  Dtype         \n",
      "---  ------    --------------  -----         \n",
      " 0   cusno     10000 non-null  int32         \n",
      " 1   gender    10000 non-null  object        \n",
      " 2   age       10000 non-null  int32         \n",
      " 3   region    10000 non-null  object        \n",
      " 4   id        10000 non-null  object        \n",
      " 5   product   10000 non-null  int64         \n",
      " 6   price     10000 non-null  float64       \n",
      " 7   quantity  10000 non-null  int32         \n",
      " 8   amount    10000 non-null  float64       \n",
      " 9   date      10000 non-null  datetime64[ns]\n",
      " 10  day       10000 non-null  object        \n",
      " 11  time      10000 non-null  int32         \n",
      " 12  age_c     10000 non-null  object        \n",
      " 13  funnels   10000 non-null  object        \n",
      "dtypes: datetime64[ns](1), float64(2), int32(4), int64(1), object(6)\n",
      "memory usage: 1015.6+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 366,
   "id": "9caf808d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "      <th>id</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2145229</td>\n",
       "      <td>10</td>\n",
       "      <td>44255.51</td>\n",
       "      <td>53</td>\n",
       "      <td>2345542.03</td>\n",
       "      <td>2021-03-29</td>\n",
       "      <td>월</td>\n",
       "      <td>12</td>\n",
       "      <td>60대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2114960</td>\n",
       "      <td>30</td>\n",
       "      <td>19383.32</td>\n",
       "      <td>74</td>\n",
       "      <td>1434365.68</td>\n",
       "      <td>2021-11-05</td>\n",
       "      <td>금</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2128640</td>\n",
       "      <td>20</td>\n",
       "      <td>16426.44</td>\n",
       "      <td>98</td>\n",
       "      <td>1609791.12</td>\n",
       "      <td>2021-09-08</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>없음</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2121938</td>\n",
       "      <td>10</td>\n",
       "      <td>47073.60</td>\n",
       "      <td>19</td>\n",
       "      <td>894398.40</td>\n",
       "      <td>2021-08-07</td>\n",
       "      <td>토</td>\n",
       "      <td>20</td>\n",
       "      <td>60대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>첫구매 100원</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2127272</td>\n",
       "      <td>20</td>\n",
       "      <td>22279.72</td>\n",
       "      <td>82</td>\n",
       "      <td>1826937.04</td>\n",
       "      <td>2021-05-31</td>\n",
       "      <td>월</td>\n",
       "      <td>24</td>\n",
       "      <td>60대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age region       id  product     price  quantity  \\\n",
       "0   1001  female   62     경기  2145229       10  44255.51        53   \n",
       "1   1001  female   62     경기  2114960       30  19383.32        74   \n",
       "2   1001  female   62     경기  2128640       20  16426.44        98   \n",
       "3   1001  female   62     경기  2121938       10  47073.60        19   \n",
       "4   1001  female   62     경기  2127272       20  22279.72        82   \n",
       "\n",
       "       amount       date day  time age_c funnels     event  \n",
       "0  2345542.03 2021-03-29   월    12   60대   외부 채널    쿠팡 멤버쉽  \n",
       "1  1434365.68 2021-11-05   금    11   60대  온라인사이트    쿠팡 멤버쉽  \n",
       "2  1609791.12 2021-09-08   수    11   60대   외부 채널        없음  \n",
       "3   894398.40 2021-08-07   토    20   60대   쿠팡 어플  첫구매 100원  \n",
       "4  1826937.04 2021-05-31   월    24   60대  온라인사이트  첫구매 100원  "
      ]
     },
     "execution_count": 366,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 이벤트 참가 여부 컬럼 추가\n",
    "df['event']=np.random.randint(1,4,size=10000)\n",
    "\n",
    "df['event'].replace({1:'쿠팡 멤버쉽', \n",
    "                      2:'첫구매 100원',\n",
    "                      3:'없음'\n",
    "                    \n",
    "                     },inplace=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 367,
   "id": "6b41e6c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\n1: 이벤트 여부: 쿠팡플레이 연계(21년도만)\\n2: 첫구매 할인(20,21년도 처음 구매하는 사람만min date)\\n0: 없음\\n'"
      ]
     },
     "execution_count": 367,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "###################이벤트참가 여부 코드 추가#############################################보류\n",
    "'''\n",
    "1: 이벤트 여부: 쿠팡플레이 연계(21년도만)\n",
    "2: 첫구매 할인(20,21년도 처음 구매하는 사람만min date)\n",
    "0: 없음\n",
    "'''\n",
    "\n",
    "# df['event']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 368,
   "id": "463c9b05",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "      <th>id</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "      <th>detail_product</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2145229</td>\n",
       "      <td>10</td>\n",
       "      <td>44255.51</td>\n",
       "      <td>53</td>\n",
       "      <td>2345542.03</td>\n",
       "      <td>2021-03-29</td>\n",
       "      <td>월</td>\n",
       "      <td>12</td>\n",
       "      <td>60대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>디지털/가전</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2114960</td>\n",
       "      <td>30</td>\n",
       "      <td>19383.32</td>\n",
       "      <td>74</td>\n",
       "      <td>1434365.68</td>\n",
       "      <td>2021-11-05</td>\n",
       "      <td>금</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>도서/문화</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2128640</td>\n",
       "      <td>20</td>\n",
       "      <td>16426.44</td>\n",
       "      <td>98</td>\n",
       "      <td>1609791.12</td>\n",
       "      <td>2021-09-08</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>없음</td>\n",
       "      <td>가구/생활</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2121938</td>\n",
       "      <td>10</td>\n",
       "      <td>47073.60</td>\n",
       "      <td>19</td>\n",
       "      <td>894398.40</td>\n",
       "      <td>2021-08-07</td>\n",
       "      <td>토</td>\n",
       "      <td>20</td>\n",
       "      <td>60대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>호텔/리조트</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2127272</td>\n",
       "      <td>20</td>\n",
       "      <td>22279.72</td>\n",
       "      <td>82</td>\n",
       "      <td>1826937.04</td>\n",
       "      <td>2021-05-31</td>\n",
       "      <td>월</td>\n",
       "      <td>24</td>\n",
       "      <td>60대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>가구/생활</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age region       id  product     price  quantity  \\\n",
       "0   1001  female   62     경기  2145229       10  44255.51        53   \n",
       "1   1001  female   62     경기  2114960       30  19383.32        74   \n",
       "2   1001  female   62     경기  2128640       20  16426.44        98   \n",
       "3   1001  female   62     경기  2121938       10  47073.60        19   \n",
       "4   1001  female   62     경기  2127272       20  22279.72        82   \n",
       "\n",
       "       amount       date day  time age_c funnels     event detail_product  \n",
       "0  2345542.03 2021-03-29   월    12   60대   외부 채널    쿠팡 멤버쉽         디지털/가전  \n",
       "1  1434365.68 2021-11-05   금    11   60대  온라인사이트    쿠팡 멤버쉽          도서/문화  \n",
       "2  1609791.12 2021-09-08   수    11   60대   외부 채널        없음          가구/생활  \n",
       "3   894398.40 2021-08-07   토    20   60대   쿠팡 어플  첫구매 100원         호텔/리조트  \n",
       "4  1826937.04 2021-05-31   월    24   60대  온라인사이트  첫구매 100원          가구/생활  "
      ]
     },
     "execution_count": 368,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#세부 제품코드 추가\n",
    "'''\n",
    "- product: \n",
    "*30. 저가제품\n",
    "1: 도서/문화\n",
    "2: 식품\n",
    "\n",
    "*20. 중가제품\n",
    "3: 패션/뷰티 \n",
    "4: 스포츠/레저\n",
    "5: 가구/생활\n",
    "\n",
    "*10. 고가제품\n",
    "6: 항공권, \n",
    "7:호텔/리조트\n",
    "8: 디지털/가전\n",
    "\n",
    "'''\n",
    "\n",
    "\n",
    "def detail(x):\n",
    "    if x==30:\n",
    "        return np.random.choice(['도서/문화','식품'])\n",
    "    elif x==20:\n",
    "        return np.random.choice(['패션/뷰티','스포츠/레저','가구/생활'])\n",
    "    elif x==10:\n",
    "        return np.random.choice(['항공','호텔/리조트','디지털/가전'])\n",
    "    \n",
    "df['detail_product']=df['product'].apply(detail)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "id": "69890103",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "      <th>id</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "      <th>detail_product</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2145229</td>\n",
       "      <td>10</td>\n",
       "      <td>446446.84</td>\n",
       "      <td>4</td>\n",
       "      <td>1785787.36</td>\n",
       "      <td>2021-03-29</td>\n",
       "      <td>월</td>\n",
       "      <td>12</td>\n",
       "      <td>60대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>디지털/가전</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2114960</td>\n",
       "      <td>30</td>\n",
       "      <td>10178.37</td>\n",
       "      <td>63</td>\n",
       "      <td>641237.31</td>\n",
       "      <td>2021-11-05</td>\n",
       "      <td>금</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>도서/문화</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2128640</td>\n",
       "      <td>20</td>\n",
       "      <td>146080.05</td>\n",
       "      <td>35</td>\n",
       "      <td>5112801.75</td>\n",
       "      <td>2021-09-08</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "      <td>60대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>없음</td>\n",
       "      <td>가구/생활</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2121938</td>\n",
       "      <td>10</td>\n",
       "      <td>295396.39</td>\n",
       "      <td>1</td>\n",
       "      <td>295396.39</td>\n",
       "      <td>2021-08-07</td>\n",
       "      <td>토</td>\n",
       "      <td>20</td>\n",
       "      <td>60대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>호텔/리조트</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>62</td>\n",
       "      <td>경기</td>\n",
       "      <td>2127272</td>\n",
       "      <td>20</td>\n",
       "      <td>159382.00</td>\n",
       "      <td>41</td>\n",
       "      <td>6534662.00</td>\n",
       "      <td>2021-05-31</td>\n",
       "      <td>월</td>\n",
       "      <td>24</td>\n",
       "      <td>60대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>가구/생활</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age region       id  product      price  quantity  \\\n",
       "0   1001  female   62     경기  2145229       10  446446.84         4   \n",
       "1   1001  female   62     경기  2114960       30   10178.37        63   \n",
       "2   1001  female   62     경기  2128640       20  146080.05        35   \n",
       "3   1001  female   62     경기  2121938       10  295396.39         1   \n",
       "4   1001  female   62     경기  2127272       20  159382.00        41   \n",
       "\n",
       "       amount       date day  time age_c funnels     event detail_product  \n",
       "0  1785787.36 2021-03-29   월    12   60대   외부 채널    쿠팡 멤버쉽         디지털/가전  \n",
       "1   641237.31 2021-11-05   금    11   60대  온라인사이트    쿠팡 멤버쉽          도서/문화  \n",
       "2  5112801.75 2021-09-08   수    11   60대   외부 채널        없음          가구/생활  \n",
       "3   295396.39 2021-08-07   토    20   60대   쿠팡 어플  첫구매 100원         호텔/리조트  \n",
       "4  6534662.00 2021-05-31   월    24   60대  온라인사이트  첫구매 100원          가구/생활  "
      ]
     },
     "execution_count": 369,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#제품코드에 따라 price, quantity, amount, sales 수정\n",
    "\n",
    "\n",
    "#price, quantity 수정: 고가제품은 구매수량 적게, 저가제품은 구매수량 구간을 크게\n",
    "def price_set(x):\n",
    "    y=0\n",
    "    if x==10: \n",
    "        y= np.random.uniform(200000,500001)\n",
    "    elif x==20:\n",
    "        y= np.random.uniform(30000,200001)\n",
    "    elif x==30: \n",
    "        y= np.random.uniform(1000,30001)\n",
    "    return y\n",
    "\n",
    "def quantity_set(x):\n",
    "    z=0\n",
    "    if x==10: \n",
    "        z= np.random.randint(1,11)\n",
    "    elif x==20:\n",
    "        z= np.random.randint(1,50)\n",
    "    elif x==30: \n",
    "        z= np.random.randint(1,100)\n",
    "    return z\n",
    "\n",
    "df['price']=df['product'].apply(price_set).round(2)\n",
    "df['quantity']=df['product'].apply(quantity_set)\n",
    "\n",
    "\n",
    "#amount 수정\n",
    "\n",
    "df['amount']=df['price']*df['quantity']\n",
    "\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "id": "840fc0eb",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age</th>\n",
       "      <th>region</th>\n",
       "      <th>id</th>\n",
       "      <th>product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "      <th>detail_product</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1197</td>\n",
       "      <td>male</td>\n",
       "      <td>51</td>\n",
       "      <td>전남</td>\n",
       "      <td>2043592</td>\n",
       "      <td>10</td>\n",
       "      <td>286407.14</td>\n",
       "      <td>5</td>\n",
       "      <td>1432035.70</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>1</td>\n",
       "      <td>50대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>디지털/가전</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1248</td>\n",
       "      <td>male</td>\n",
       "      <td>17</td>\n",
       "      <td>경북</td>\n",
       "      <td>2031280</td>\n",
       "      <td>30</td>\n",
       "      <td>25390.88</td>\n",
       "      <td>86</td>\n",
       "      <td>2183615.68</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>1</td>\n",
       "      <td>10대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>도서/문화</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1843</td>\n",
       "      <td>male</td>\n",
       "      <td>22</td>\n",
       "      <td>전북</td>\n",
       "      <td>2033750</td>\n",
       "      <td>30</td>\n",
       "      <td>14908.32</td>\n",
       "      <td>57</td>\n",
       "      <td>849774.24</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>3</td>\n",
       "      <td>20대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>식품</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1208</td>\n",
       "      <td>male</td>\n",
       "      <td>30</td>\n",
       "      <td>경기</td>\n",
       "      <td>2015221</td>\n",
       "      <td>10</td>\n",
       "      <td>215219.36</td>\n",
       "      <td>7</td>\n",
       "      <td>1506535.52</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "      <td>30대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>항공</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1656</td>\n",
       "      <td>female</td>\n",
       "      <td>14</td>\n",
       "      <td>전북</td>\n",
       "      <td>2040529</td>\n",
       "      <td>10</td>\n",
       "      <td>426543.53</td>\n",
       "      <td>3</td>\n",
       "      <td>1279630.59</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "      <td>10대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>없음</td>\n",
       "      <td>호텔/리조트</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender  age region       id  product      price  quantity  \\\n",
       "0   1197    male   51     전남  2043592       10  286407.14         5   \n",
       "1   1248    male   17     경북  2031280       30   25390.88        86   \n",
       "2   1843    male   22     전북  2033750       30   14908.32        57   \n",
       "3   1208    male   30     경기  2015221       10  215219.36         7   \n",
       "4   1656  female   14     전북  2040529       10  426543.53         3   \n",
       "\n",
       "       amount       date day  time age_c    funnels     event detail_product  \n",
       "0  1432035.70 2020-01-01   수     1   50대     온라인사이트  첫구매 100원         디지털/가전  \n",
       "1  2183615.68 2020-01-01   수     1   10대  sns 홍보사이트    쿠팡 멤버쉽          도서/문화  \n",
       "2   849774.24 2020-01-01   수     3   20대  sns 홍보사이트    쿠팡 멤버쉽             식품  \n",
       "3  1506535.52 2020-01-01   수    11   30대  sns 홍보사이트  첫구매 100원             항공  \n",
       "4  1279630.59 2020-01-01   수    11   10대     온라인사이트        없음         호텔/리조트  "
      ]
     },
     "execution_count": 370,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#데이터 순서를 날짜, 시간으로 정렬\n",
    "\n",
    "df=df.sort_values(['date','time'],ignore_index=True)  #정렬 순서대로 인덱스 reset\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 371,
   "id": "711d0b14",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>region</th>\n",
       "      <th>age</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "      <th>product</th>\n",
       "      <th>detail_product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2043592</td>\n",
       "      <td>1197</td>\n",
       "      <td>male</td>\n",
       "      <td>전남</td>\n",
       "      <td>51</td>\n",
       "      <td>50대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>디지털/가전</td>\n",
       "      <td>286407.14</td>\n",
       "      <td>5</td>\n",
       "      <td>1432035.70</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2031280</td>\n",
       "      <td>1248</td>\n",
       "      <td>male</td>\n",
       "      <td>경북</td>\n",
       "      <td>17</td>\n",
       "      <td>10대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>30</td>\n",
       "      <td>도서/문화</td>\n",
       "      <td>25390.88</td>\n",
       "      <td>86</td>\n",
       "      <td>2183615.68</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2033750</td>\n",
       "      <td>1843</td>\n",
       "      <td>male</td>\n",
       "      <td>전북</td>\n",
       "      <td>22</td>\n",
       "      <td>20대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>30</td>\n",
       "      <td>식품</td>\n",
       "      <td>14908.32</td>\n",
       "      <td>57</td>\n",
       "      <td>849774.24</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2015221</td>\n",
       "      <td>1208</td>\n",
       "      <td>male</td>\n",
       "      <td>경기</td>\n",
       "      <td>30</td>\n",
       "      <td>30대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>215219.36</td>\n",
       "      <td>7</td>\n",
       "      <td>1506535.52</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2040529</td>\n",
       "      <td>1656</td>\n",
       "      <td>female</td>\n",
       "      <td>전북</td>\n",
       "      <td>14</td>\n",
       "      <td>10대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>없음</td>\n",
       "      <td>10</td>\n",
       "      <td>호텔/리조트</td>\n",
       "      <td>426543.53</td>\n",
       "      <td>3</td>\n",
       "      <td>1279630.59</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        id  cusno  gender region  age age_c    funnels     event  product  \\\n",
       "0  2043592   1197    male     전남   51   50대     온라인사이트  첫구매 100원       10   \n",
       "1  2031280   1248    male     경북   17   10대  sns 홍보사이트    쿠팡 멤버쉽       30   \n",
       "2  2033750   1843    male     전북   22   20대  sns 홍보사이트    쿠팡 멤버쉽       30   \n",
       "3  2015221   1208    male     경기   30   30대  sns 홍보사이트  첫구매 100원       10   \n",
       "4  2040529   1656  female     전북   14   10대     온라인사이트        없음       10   \n",
       "\n",
       "  detail_product      price  quantity      amount       date day  time  \n",
       "0         디지털/가전  286407.14         5  1432035.70 2020-01-01   수     1  \n",
       "1          도서/문화   25390.88        86  2183615.68 2020-01-01   수     1  \n",
       "2             식품   14908.32        57   849774.24 2020-01-01   수     3  \n",
       "3             항공  215219.36         7  1506535.52 2020-01-01   수    11  \n",
       "4         호텔/리조트  426543.53         3  1279630.59 2020-01-01   수    11  "
      ]
     },
     "execution_count": 371,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#데이터프레임 컬럼 순서 바꾸기\n",
    "\n",
    "df=df[['id','cusno','gender','region','age','age_c','funnels','event','product','detail_product','price',\n",
    "           'quantity','amount','date','day','time']]\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79d41172",
   "metadata": {},
   "source": [
    "### 데이터 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 372,
   "id": "38a9ddf0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>region</th>\n",
       "      <th>age</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "      <th>product</th>\n",
       "      <th>detail_product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2043592</td>\n",
       "      <td>1197</td>\n",
       "      <td>male</td>\n",
       "      <td>전남</td>\n",
       "      <td>51</td>\n",
       "      <td>50대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>디지털/가전</td>\n",
       "      <td>286407.14</td>\n",
       "      <td>5</td>\n",
       "      <td>1432035.70</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2031280</td>\n",
       "      <td>1248</td>\n",
       "      <td>male</td>\n",
       "      <td>경북</td>\n",
       "      <td>17</td>\n",
       "      <td>10대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>30</td>\n",
       "      <td>도서/문화</td>\n",
       "      <td>25390.88</td>\n",
       "      <td>86</td>\n",
       "      <td>2183615.68</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>1</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2033750</td>\n",
       "      <td>1843</td>\n",
       "      <td>male</td>\n",
       "      <td>전북</td>\n",
       "      <td>22</td>\n",
       "      <td>20대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>쿠팡 멤버쉽</td>\n",
       "      <td>30</td>\n",
       "      <td>식품</td>\n",
       "      <td>14908.32</td>\n",
       "      <td>57</td>\n",
       "      <td>849774.24</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>3</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2015221</td>\n",
       "      <td>1208</td>\n",
       "      <td>male</td>\n",
       "      <td>경기</td>\n",
       "      <td>30</td>\n",
       "      <td>30대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>215219.36</td>\n",
       "      <td>7</td>\n",
       "      <td>1506535.52</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2040529</td>\n",
       "      <td>1656</td>\n",
       "      <td>female</td>\n",
       "      <td>전북</td>\n",
       "      <td>14</td>\n",
       "      <td>10대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>없음</td>\n",
       "      <td>10</td>\n",
       "      <td>호텔/리조트</td>\n",
       "      <td>426543.53</td>\n",
       "      <td>3</td>\n",
       "      <td>1279630.59</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>11</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        id  cusno  gender region  age age_c    funnels     event  product  \\\n",
       "0  2043592   1197    male     전남   51   50대     온라인사이트  첫구매 100원       10   \n",
       "1  2031280   1248    male     경북   17   10대  sns 홍보사이트    쿠팡 멤버쉽       30   \n",
       "2  2033750   1843    male     전북   22   20대  sns 홍보사이트    쿠팡 멤버쉽       30   \n",
       "3  2015221   1208    male     경기   30   30대  sns 홍보사이트  첫구매 100원       10   \n",
       "4  2040529   1656  female     전북   14   10대     온라인사이트        없음       10   \n",
       "\n",
       "  detail_product      price  quantity      amount       date day  time  year  \n",
       "0         디지털/가전  286407.14         5  1432035.70 2020-01-01   수     1  2020  \n",
       "1          도서/문화   25390.88        86  2183615.68 2020-01-01   수     1  2020  \n",
       "2             식품   14908.32        57   849774.24 2020-01-01   수     3  2020  \n",
       "3             항공  215219.36         7  1506535.52 2020-01-01   수    11  2020  \n",
       "4         호텔/리조트  426543.53         3  1279630.59 2020-01-01   수    11  2020  "
      ]
     },
     "execution_count": 372,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#연도별 피벗테이블 작성을 위해 연도 변수 생성\n",
    "\n",
    "df['year']=df['date'].dt.year\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 373,
   "id": "235f8c60",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_c</th>\n",
       "      <th>10대</th>\n",
       "      <th>20대</th>\n",
       "      <th>30대</th>\n",
       "      <th>40대</th>\n",
       "      <th>50대</th>\n",
       "      <th>60대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>detail_product</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>가구/생활</th>\n",
       "      <td>86</td>\n",
       "      <td>103</td>\n",
       "      <td>95</td>\n",
       "      <td>92</td>\n",
       "      <td>92</td>\n",
       "      <td>102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>도서/문화</th>\n",
       "      <td>166</td>\n",
       "      <td>130</td>\n",
       "      <td>120</td>\n",
       "      <td>153</td>\n",
       "      <td>136</td>\n",
       "      <td>144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>디지털/가전</th>\n",
       "      <td>82</td>\n",
       "      <td>87</td>\n",
       "      <td>71</td>\n",
       "      <td>87</td>\n",
       "      <td>91</td>\n",
       "      <td>102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>스포츠/레저</th>\n",
       "      <td>89</td>\n",
       "      <td>89</td>\n",
       "      <td>74</td>\n",
       "      <td>112</td>\n",
       "      <td>102</td>\n",
       "      <td>84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>식품</th>\n",
       "      <td>118</td>\n",
       "      <td>136</td>\n",
       "      <td>121</td>\n",
       "      <td>142</td>\n",
       "      <td>138</td>\n",
       "      <td>160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>패션/뷰티</th>\n",
       "      <td>105</td>\n",
       "      <td>103</td>\n",
       "      <td>60</td>\n",
       "      <td>82</td>\n",
       "      <td>86</td>\n",
       "      <td>108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>항공</th>\n",
       "      <td>92</td>\n",
       "      <td>101</td>\n",
       "      <td>78</td>\n",
       "      <td>103</td>\n",
       "      <td>98</td>\n",
       "      <td>93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>호텔/리조트</th>\n",
       "      <td>92</td>\n",
       "      <td>78</td>\n",
       "      <td>75</td>\n",
       "      <td>94</td>\n",
       "      <td>97</td>\n",
       "      <td>105</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_c           10대  20대  30대  40대  50대  60대\n",
       "detail_product                              \n",
       "가구/생활            86  103   95   92   92  102\n",
       "도서/문화           166  130  120  153  136  144\n",
       "디지털/가전           82   87   71   87   91  102\n",
       "스포츠/레저           89   89   74  112  102   84\n",
       "식품              118  136  121  142  138  160\n",
       "패션/뷰티           105  103   60   82   86  108\n",
       "항공               92  101   78  103   98   93\n",
       "호텔/리조트           92   78   75   94   97  105"
      ]
     },
     "execution_count": 373,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#20년도 연령별/세부제품별 구매량\n",
    "\n",
    "pd.crosstab(index=df[df['year']==2020].detail_product,  \n",
    "                                   columns=df[df['year']==2020].age_c)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 374,
   "id": "54778713",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='detail_product'>"
      ]
     },
     "execution_count": 374,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.crosstab(index=df[df['year']==2020].detail_product,  \n",
    "                                   columns=df[df['year']==2020].age_c).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 375,
   "id": "78c42de8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_c</th>\n",
       "      <th>10대</th>\n",
       "      <th>20대</th>\n",
       "      <th>30대</th>\n",
       "      <th>40대</th>\n",
       "      <th>50대</th>\n",
       "      <th>60대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>detail_product</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>가구/생활</th>\n",
       "      <td>60</td>\n",
       "      <td>85</td>\n",
       "      <td>76</td>\n",
       "      <td>99</td>\n",
       "      <td>101</td>\n",
       "      <td>124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>도서/문화</th>\n",
       "      <td>118</td>\n",
       "      <td>116</td>\n",
       "      <td>116</td>\n",
       "      <td>140</td>\n",
       "      <td>137</td>\n",
       "      <td>158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>디지털/가전</th>\n",
       "      <td>89</td>\n",
       "      <td>100</td>\n",
       "      <td>82</td>\n",
       "      <td>90</td>\n",
       "      <td>101</td>\n",
       "      <td>116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>스포츠/레저</th>\n",
       "      <td>74</td>\n",
       "      <td>109</td>\n",
       "      <td>77</td>\n",
       "      <td>87</td>\n",
       "      <td>103</td>\n",
       "      <td>93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>식품</th>\n",
       "      <td>166</td>\n",
       "      <td>127</td>\n",
       "      <td>113</td>\n",
       "      <td>127</td>\n",
       "      <td>138</td>\n",
       "      <td>160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>패션/뷰티</th>\n",
       "      <td>79</td>\n",
       "      <td>102</td>\n",
       "      <td>82</td>\n",
       "      <td>102</td>\n",
       "      <td>91</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>항공</th>\n",
       "      <td>91</td>\n",
       "      <td>98</td>\n",
       "      <td>92</td>\n",
       "      <td>97</td>\n",
       "      <td>110</td>\n",
       "      <td>114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>호텔/리조트</th>\n",
       "      <td>102</td>\n",
       "      <td>92</td>\n",
       "      <td>87</td>\n",
       "      <td>115</td>\n",
       "      <td>91</td>\n",
       "      <td>105</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_c           10대  20대  30대  40대  50대  60대\n",
       "detail_product                              \n",
       "가구/생활            60   85   76   99  101  124\n",
       "도서/문화           118  116  116  140  137  158\n",
       "디지털/가전           89  100   82   90  101  116\n",
       "스포츠/레저           74  109   77   87  103   93\n",
       "식품              166  127  113  127  138  160\n",
       "패션/뷰티            79  102   82  102   91  114\n",
       "항공               91   98   92   97  110  114\n",
       "호텔/리조트          102   92   87  115   91  105"
      ]
     },
     "execution_count": 375,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#21년도 연령별/세부제품별  구매량\n",
    "\n",
    "pd.crosstab(index=df[df['year']==2021].detail_product,\n",
    "                                   columns=df[df['year']==2021].age_c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "id": "8c2c00a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='detail_product'>"
      ]
     },
     "execution_count": 376,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.crosstab(index=df[df['year']==2021].detail_product,  \n",
    "                                   columns=df[df['year']==2021].age_c).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 377,
   "id": "5303245e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#10,60대의 구매가 많음\n",
    "#10대는 구매 여력이 없고,\n",
    "#60대는 온라인몰이라는 특성상 많은 구매가 없을 거라고 생각"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 378,
   "id": "7504e3eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>detail_product</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"16\" valign=\"top\">count</th>\n",
       "      <th rowspan=\"8\" valign=\"top\">2020</th>\n",
       "      <th>가구/생활</th>\n",
       "      <td>570.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>도서/문화</th>\n",
       "      <td>849.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>디지털/가전</th>\n",
       "      <td>520.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>스포츠/레저</th>\n",
       "      <td>550.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>식품</th>\n",
       "      <td>815.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>패션/뷰티</th>\n",
       "      <td>544.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>항공</th>\n",
       "      <td>565.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>호텔/리조트</th>\n",
       "      <td>541.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">2021</th>\n",
       "      <th>가구/생활</th>\n",
       "      <td>545.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>도서/문화</th>\n",
       "      <td>785.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>디지털/가전</th>\n",
       "      <td>578.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>스포츠/레저</th>\n",
       "      <td>543.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>식품</th>\n",
       "      <td>831.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>패션/뷰티</th>\n",
       "      <td>570.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>항공</th>\n",
       "      <td>602.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>호텔/리조트</th>\n",
       "      <td>592.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"16\" valign=\"top\">sum</th>\n",
       "      <th rowspan=\"8\" valign=\"top\">2020</th>\n",
       "      <th>가구/생활</th>\n",
       "      <td>1,706,231,661.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>도서/문화</th>\n",
       "      <td>674,895,634.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>디지털/가전</th>\n",
       "      <td>971,455,167.64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>스포츠/레저</th>\n",
       "      <td>1,605,301,489.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>식품</th>\n",
       "      <td>640,719,246.48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>패션/뷰티</th>\n",
       "      <td>1,529,617,221.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>항공</th>\n",
       "      <td>1,106,136,119.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>호텔/리조트</th>\n",
       "      <td>1,061,006,891.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">2021</th>\n",
       "      <th>가구/생활</th>\n",
       "      <td>1,629,766,856.59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>도서/문화</th>\n",
       "      <td>615,637,563.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>디지털/가전</th>\n",
       "      <td>1,113,682,551.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>스포츠/레저</th>\n",
       "      <td>1,537,664,342.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>식품</th>\n",
       "      <td>658,607,247.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>패션/뷰티</th>\n",
       "      <td>1,688,190,800.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>항공</th>\n",
       "      <td>1,121,268,823.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>호텔/리조트</th>\n",
       "      <td>1,126,545,506.41</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                      amount\n",
       "      year detail_product                   \n",
       "count 2020 가구/생활                      570.00\n",
       "           도서/문화                      849.00\n",
       "           디지털/가전                     520.00\n",
       "           스포츠/레저                     550.00\n",
       "           식품                         815.00\n",
       "           패션/뷰티                      544.00\n",
       "           항공                         565.00\n",
       "           호텔/리조트                     541.00\n",
       "      2021 가구/생활                      545.00\n",
       "           도서/문화                      785.00\n",
       "           디지털/가전                     578.00\n",
       "           스포츠/레저                     543.00\n",
       "           식품                         831.00\n",
       "           패션/뷰티                      570.00\n",
       "           항공                         602.00\n",
       "           호텔/리조트                     592.00\n",
       "sum   2020 가구/생활            1,706,231,661.72\n",
       "           도서/문화              674,895,634.38\n",
       "           디지털/가전             971,455,167.64\n",
       "           스포츠/레저           1,605,301,489.15\n",
       "           식품                 640,719,246.48\n",
       "           패션/뷰티            1,529,617,221.79\n",
       "           항공               1,106,136,119.43\n",
       "           호텔/리조트           1,061,006,891.24\n",
       "      2021 가구/생활            1,629,766,856.59\n",
       "           도서/문화              615,637,563.93\n",
       "           디지털/가전           1,113,682,551.07\n",
       "           스포츠/레저           1,537,664,342.22\n",
       "           식품                 658,607,247.88\n",
       "           패션/뷰티            1,688,190,800.90\n",
       "           항공               1,121,268,823.84\n",
       "           호텔/리조트           1,126,545,506.41"
      ]
     },
     "execution_count": 378,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#연도별/세부 제품별 총 구매수량 및 총 구매액을 알기 위한 피벗테이블 작성\n",
    "\n",
    "pd.options.display.float_format = '{:.2f}'.format    #과학적 표기법 x\n",
    "\n",
    "\n",
    "table1=pd.pivot_table(df,\n",
    "                     columns=['year','detail_product'],    \n",
    "                     values='amount',\n",
    "                     aggfunc=['count','sum']\n",
    "                    )\n",
    "\n",
    "table1.T.applymap(lambda x: f'{x: 0,.2f}')\n",
    "\n",
    "#20,21년도 간 구매수량, 구매액의 차이가 크게 없음"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 379,
   "id": "dd3c5700",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.reset_option('display.float_format')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 315,
   "id": "63454c7c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">count</th>\n",
       "      <th colspan=\"2\" halign=\"left\">sum</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>2020</th>\n",
       "      <th>2021</th>\n",
       "      <th>2020</th>\n",
       "      <th>2021</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age_c</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1001</th>\n",
       "      <th>female</th>\n",
       "      <th>30대</th>\n",
       "      <td>3.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1,424,958.48</td>\n",
       "      <td>5,116,025.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1002</th>\n",
       "      <th>male</th>\n",
       "      <th>30대</th>\n",
       "      <td>2.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>847,256.42</td>\n",
       "      <td>4,823,704.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1003</th>\n",
       "      <th>male</th>\n",
       "      <th>30대</th>\n",
       "      <td>4.00</td>\n",
       "      <td>7.00</td>\n",
       "      <td>8,769,781.00</td>\n",
       "      <td>23,685,463.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1004</th>\n",
       "      <th>male</th>\n",
       "      <th>10대</th>\n",
       "      <td>7.00</td>\n",
       "      <td>5.00</td>\n",
       "      <td>12,757,446.37</td>\n",
       "      <td>12,110,151.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1005</th>\n",
       "      <th>female</th>\n",
       "      <th>30대</th>\n",
       "      <td>6.00</td>\n",
       "      <td>5.00</td>\n",
       "      <td>10,317,297.04</td>\n",
       "      <td>6,189,127.09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1006</th>\n",
       "      <th>female</th>\n",
       "      <th>40대</th>\n",
       "      <td>9.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>18,193,290.44</td>\n",
       "      <td>6,079,725.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1007</th>\n",
       "      <th>female</th>\n",
       "      <th>30대</th>\n",
       "      <td>2.00</td>\n",
       "      <td>6.00</td>\n",
       "      <td>5,509,547.44</td>\n",
       "      <td>5,226,331.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1008</th>\n",
       "      <th>male</th>\n",
       "      <th>20대</th>\n",
       "      <td>6.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>10,595,410.51</td>\n",
       "      <td>7,963,810.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1009</th>\n",
       "      <th>female</th>\n",
       "      <th>30대</th>\n",
       "      <td>5.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>11,091,667.51</td>\n",
       "      <td>7,000,046.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1010</th>\n",
       "      <th>female</th>\n",
       "      <th>40대</th>\n",
       "      <td>4.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>10,661,674.82</td>\n",
       "      <td>8,891,142.84</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    count                    sum                \n",
       "year                 2020   2021            2020            2021\n",
       "cusno gender age_c                                              \n",
       "1001  female 30대     3.00   2.00    1,424,958.48    5,116,025.10\n",
       "1002  male   30대     2.00   4.00      847,256.42    4,823,704.77\n",
       "1003  male   30대     4.00   7.00    8,769,781.00   23,685,463.03\n",
       "1004  male   10대     7.00   5.00   12,757,446.37   12,110,151.20\n",
       "1005  female 30대     6.00   5.00   10,317,297.04    6,189,127.09\n",
       "1006  female 40대     9.00   4.00   18,193,290.44    6,079,725.50\n",
       "1007  female 30대     2.00   6.00    5,509,547.44    5,226,331.49\n",
       "1008  male   20대     6.00   4.00   10,595,410.51    7,963,810.94\n",
       "1009  female 30대     5.00   4.00   11,091,667.51    7,000,046.70\n",
       "1010  female 40대     4.00   2.00   10,661,674.82    8,891,142.84"
      ]
     },
     "execution_count": 315,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#고객번호에 따라 연도별 총 구매수량,총 구매액을 알기 위한 피벗테이블 작성\n",
    "\n",
    "table2=pd.pivot_table(df,\n",
    "                     index=['cusno','gender','age_c'],\n",
    "                     columns='year',\n",
    "                     values='amount',\n",
    "                     aggfunc=['count','sum']\n",
    "                     )\n",
    "table2.applymap(lambda x: f'{x: 0,.2f}').head(10)\n",
    "\n",
    "#연도별 조금씩 차이가 있어보이긴함\n",
    "#20년도에 null값이 존재하는 것도 보임-> 유입고객변수여부 만들어보기, 이탈여부도 만들어보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 316,
   "id": "1c72637f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#연산하기 위해 null값을 0으로 변경\n",
    "\n",
    "table2.fillna(0,inplace=True)\n",
    "table2['count']=table2['count'].astype(int)    #구매횟수를 정수화"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 317,
   "id": "76315c34",
   "metadata": {},
   "outputs": [],
   "source": [
    "#(21-20)총 구매횟수 차이 구하기\n",
    "table2['count_df']=table2.iloc[:,1]-table2.iloc[:,0]\n",
    "\n",
    "#(21-20)총 구매액 차이 구하기\n",
    "table2['amount_df']=table2.iloc[:,3]-table2.iloc[:,2]\n",
    "\n",
    "#총 구매액이 증가했는지 여부 확인하는 sales 변수 생성\n",
    "table2['sales']=np.where(table2['amount_df']>=0,1,0)\n",
    "\n",
    "#21년도 이탈 고객 여부 변수 생성\n",
    "table2['leave']=np.where(table2.iloc[:,1]==0,1,0)  \n",
    "\n",
    "#21년도 새로 유입된 고객 여부 변수 생성\n",
    "table2['welcome']=np.where(table2.iloc[:,0]==0,1,0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 318,
   "id": "25bc29c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>age_c</th>\n",
       "      <th>count_2020</th>\n",
       "      <th>count_2021</th>\n",
       "      <th>amount_2020</th>\n",
       "      <th>amount_2021</th>\n",
       "      <th>count_df</th>\n",
       "      <th>amount_df</th>\n",
       "      <th>sales</th>\n",
       "      <th>leave</th>\n",
       "      <th>welcome</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1001</td>\n",
       "      <td>female</td>\n",
       "      <td>30대</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1424958.48</td>\n",
       "      <td>5116025.10</td>\n",
       "      <td>-1</td>\n",
       "      <td>3691066.62</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1002</td>\n",
       "      <td>male</td>\n",
       "      <td>30대</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>847256.42</td>\n",
       "      <td>4823704.77</td>\n",
       "      <td>2</td>\n",
       "      <td>3976448.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1003</td>\n",
       "      <td>male</td>\n",
       "      <td>30대</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>8769781.00</td>\n",
       "      <td>23685463.03</td>\n",
       "      <td>3</td>\n",
       "      <td>14915682.03</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1004</td>\n",
       "      <td>male</td>\n",
       "      <td>10대</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>12757446.37</td>\n",
       "      <td>12110151.20</td>\n",
       "      <td>-2</td>\n",
       "      <td>-647295.17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1005</td>\n",
       "      <td>female</td>\n",
       "      <td>30대</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>10317297.04</td>\n",
       "      <td>6189127.09</td>\n",
       "      <td>-1</td>\n",
       "      <td>-4128169.95</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1006</td>\n",
       "      <td>female</td>\n",
       "      <td>40대</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>18193290.44</td>\n",
       "      <td>6079725.50</td>\n",
       "      <td>-5</td>\n",
       "      <td>-12113564.94</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1007</td>\n",
       "      <td>female</td>\n",
       "      <td>30대</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>5509547.44</td>\n",
       "      <td>5226331.49</td>\n",
       "      <td>4</td>\n",
       "      <td>-283215.95</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1008</td>\n",
       "      <td>male</td>\n",
       "      <td>20대</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>10595410.51</td>\n",
       "      <td>7963810.94</td>\n",
       "      <td>-2</td>\n",
       "      <td>-2631599.57</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1009</td>\n",
       "      <td>female</td>\n",
       "      <td>30대</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>11091667.51</td>\n",
       "      <td>7000046.70</td>\n",
       "      <td>-1</td>\n",
       "      <td>-4091620.81</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1010</td>\n",
       "      <td>female</td>\n",
       "      <td>40대</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>10661674.82</td>\n",
       "      <td>8891142.84</td>\n",
       "      <td>-2</td>\n",
       "      <td>-1770531.98</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cusno  gender age_c  count_2020  count_2021  amount_2020  amount_2021  \\\n",
       "0   1001  female   30대           3           2   1424958.48   5116025.10   \n",
       "1   1002    male   30대           2           4    847256.42   4823704.77   \n",
       "2   1003    male   30대           4           7   8769781.00  23685463.03   \n",
       "3   1004    male   10대           7           5  12757446.37  12110151.20   \n",
       "4   1005  female   30대           6           5  10317297.04   6189127.09   \n",
       "5   1006  female   40대           9           4  18193290.44   6079725.50   \n",
       "6   1007  female   30대           2           6   5509547.44   5226331.49   \n",
       "7   1008    male   20대           6           4  10595410.51   7963810.94   \n",
       "8   1009  female   30대           5           4  11091667.51   7000046.70   \n",
       "9   1010  female   40대           4           2  10661674.82   8891142.84   \n",
       "\n",
       "   count_df    amount_df  sales  leave  welcome  \n",
       "0        -1   3691066.62      1      0        0  \n",
       "1         2   3976448.35      1      0        0  \n",
       "2         3  14915682.03      1      0        0  \n",
       "3        -2   -647295.17      0      0        0  \n",
       "4        -1  -4128169.95      0      0        0  \n",
       "5        -5 -12113564.94      0      0        0  \n",
       "6         4   -283215.95      0      0        0  \n",
       "7        -2  -2631599.57      0      0        0  \n",
       "8        -1  -4091620.81      0      0        0  \n",
       "9        -2  -1770531.98      0      0        0  "
      ]
     },
     "execution_count": 318,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 컬럼이름 바꿔주고 인덱스 삭제\n",
    "\n",
    "table2.columns=['count_2020','count_2021','amount_2020','amount_2021', 'count_df',\n",
    "              'amount_df','sales','leave','welcome']\n",
    "\n",
    "table2.reset_index(inplace=True)\n",
    "table2.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 319,
   "id": "2b74ff00",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5069, 4931)"
      ]
     },
     "execution_count": 319,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#연도별 총 구매 횟수 확인\n",
    "\n",
    "table2.count_2020.sum(), table2.count_2021.sum() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 320,
   "id": "641aecb1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(9596051612.720001, 9279408804.36)"
      ]
     },
     "execution_count": 320,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#연도별 총 구매액 확인\n",
    "\n",
    "table2.amount_2020.sum(),table2.amount_2021.sum()\n",
    "\n",
    "#크게 차이가 없음"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 321,
   "id": "4527707c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_c</th>\n",
       "      <th>10대</th>\n",
       "      <th>20대</th>\n",
       "      <th>30대</th>\n",
       "      <th>40대</th>\n",
       "      <th>50대</th>\n",
       "      <th>60대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>funnels</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sns 홍보사이트</th>\n",
       "      <td>209</td>\n",
       "      <td>186</td>\n",
       "      <td>199</td>\n",
       "      <td>189</td>\n",
       "      <td>217</td>\n",
       "      <td>217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>온라인사이트</th>\n",
       "      <td>224</td>\n",
       "      <td>193</td>\n",
       "      <td>217</td>\n",
       "      <td>207</td>\n",
       "      <td>197</td>\n",
       "      <td>222</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>외부 채널</th>\n",
       "      <td>235</td>\n",
       "      <td>213</td>\n",
       "      <td>218</td>\n",
       "      <td>201</td>\n",
       "      <td>226</td>\n",
       "      <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>쿠팡 어플</th>\n",
       "      <td>223</td>\n",
       "      <td>177</td>\n",
       "      <td>233</td>\n",
       "      <td>215</td>\n",
       "      <td>213</td>\n",
       "      <td>213</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_c      10대  20대  30대  40대  50대  60대\n",
       "funnels                                \n",
       "sns 홍보사이트  209  186  199  189  217  217\n",
       "온라인사이트     224  193  217  207  197  222\n",
       "외부 채널      235  213  218  201  226  225\n",
       "쿠팡 어플      223  177  233  215  213  213"
      ]
     },
     "execution_count": 321,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 연도별 유입경로 확인\n",
    "\n",
    "pd.crosstab(index=df[df['year']==2020].funnels,\n",
    "                                   columns=df[df['year']==2020].age_c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 322,
   "id": "49c1d159",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_c</th>\n",
       "      <th>10대</th>\n",
       "      <th>20대</th>\n",
       "      <th>30대</th>\n",
       "      <th>40대</th>\n",
       "      <th>50대</th>\n",
       "      <th>60대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>funnels</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>sns 홍보사이트</th>\n",
       "      <td>212</td>\n",
       "      <td>169</td>\n",
       "      <td>220</td>\n",
       "      <td>212</td>\n",
       "      <td>228</td>\n",
       "      <td>228</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>온라인사이트</th>\n",
       "      <td>216</td>\n",
       "      <td>177</td>\n",
       "      <td>198</td>\n",
       "      <td>206</td>\n",
       "      <td>214</td>\n",
       "      <td>205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>외부 채널</th>\n",
       "      <td>215</td>\n",
       "      <td>163</td>\n",
       "      <td>225</td>\n",
       "      <td>196</td>\n",
       "      <td>198</td>\n",
       "      <td>197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>쿠팡 어플</th>\n",
       "      <td>222</td>\n",
       "      <td>186</td>\n",
       "      <td>213</td>\n",
       "      <td>219</td>\n",
       "      <td>207</td>\n",
       "      <td>205</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_c      10대  20대  30대  40대  50대  60대\n",
       "funnels                                \n",
       "sns 홍보사이트  212  169  220  212  228  228\n",
       "온라인사이트     216  177  198  206  214  205\n",
       "외부 채널      215  163  225  196  198  197\n",
       "쿠팡 어플      222  186  213  219  207  205"
      ]
     },
     "execution_count": 322,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(index=df[df['year']==2021].funnels,\n",
    "                                   columns=df[df['year']==2021].age_c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 323,
   "id": "2f8fa6a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_c</th>\n",
       "      <th>10대</th>\n",
       "      <th>20대</th>\n",
       "      <th>30대</th>\n",
       "      <th>40대</th>\n",
       "      <th>50대</th>\n",
       "      <th>60대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>event</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>없음</th>\n",
       "      <td>302</td>\n",
       "      <td>263</td>\n",
       "      <td>309</td>\n",
       "      <td>272</td>\n",
       "      <td>301</td>\n",
       "      <td>273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>첫구매 100원</th>\n",
       "      <td>284</td>\n",
       "      <td>251</td>\n",
       "      <td>272</td>\n",
       "      <td>281</td>\n",
       "      <td>281</td>\n",
       "      <td>286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>쿠팡 멤버쉽</th>\n",
       "      <td>305</td>\n",
       "      <td>255</td>\n",
       "      <td>286</td>\n",
       "      <td>259</td>\n",
       "      <td>271</td>\n",
       "      <td>318</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_c     10대  20대  30대  40대  50대  60대\n",
       "event                                 \n",
       "없음        302  263  309  272  301  273\n",
       "첫구매 100원  284  251  272  281  281  286\n",
       "쿠팡 멤버쉽    305  255  286  259  271  318"
      ]
     },
     "execution_count": 323,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 연도별 이벤트여부 확인\n",
    "\n",
    "pd.crosstab(index=df[df['year']==2020].event,\n",
    "                                  columns=df[df['year']==2020].age_c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 324,
   "id": "90b80f57",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_c</th>\n",
       "      <th>10대</th>\n",
       "      <th>20대</th>\n",
       "      <th>30대</th>\n",
       "      <th>40대</th>\n",
       "      <th>50대</th>\n",
       "      <th>60대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>event</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>없음</th>\n",
       "      <td>298</td>\n",
       "      <td>236</td>\n",
       "      <td>274</td>\n",
       "      <td>271</td>\n",
       "      <td>286</td>\n",
       "      <td>286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>첫구매 100원</th>\n",
       "      <td>285</td>\n",
       "      <td>235</td>\n",
       "      <td>296</td>\n",
       "      <td>274</td>\n",
       "      <td>272</td>\n",
       "      <td>262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>쿠팡 멤버쉽</th>\n",
       "      <td>282</td>\n",
       "      <td>224</td>\n",
       "      <td>286</td>\n",
       "      <td>288</td>\n",
       "      <td>289</td>\n",
       "      <td>287</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_c     10대  20대  30대  40대  50대  60대\n",
       "event                                 \n",
       "없음        298  236  274  271  286  286\n",
       "첫구매 100원  285  235  296  274  272  262\n",
       "쿠팡 멤버쉽    282  224  286  288  289  287"
      ]
     },
     "execution_count": 324,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(index=df[df['year']==2021].event,\n",
    "                                   columns=df[df['year']==2021].age_c)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "441737ac",
   "metadata": {},
   "source": [
    "## 인사이트 도출을 위한 데이터 수정"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4b67b3c",
   "metadata": {},
   "source": [
    "#### 데이터 기본 조작\n",
    "\n",
    " 1. 10대, 60대 수 줄이고, 20,30,40대 늘리기\n",
    " 2. 10대들의 구매는 도서/문화, 패션/뷰티에 집중적\n",
    " 3. 60대들의 구매는 도서/문화를 줄이고 항공(은퇴 후 시간이 많이 남아서), 레저/스포츠(산 많이 다니니까)에 집중적"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d0f9bfa1",
   "metadata": {},
   "source": [
    "- ※ 데이터를 수정하면서, 연령이 바뀌다보니 고유번호인 cusno변수에 문제가 생김!\n",
    "- ※ 따라서, 데이터 수정을 전체적으로 진행하면서 변화된 고객데이터는 cusno를 null값으로 변환해주고,이후에 cusno변수를 일괄적으로 연령/성별/지역에 따라 일괄적으로 수정하기로 함"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 325,
   "id": "e7e08d1d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1756\n"
     ]
    }
   ],
   "source": [
    "#10대 불린인덱싱\n",
    "\n",
    "teenager=df[(df['age']<20)]\n",
    "print(len(teenager))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 326,
   "id": "376d0345",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 제품별 데이터 세부내역 수정: 10대 구매는 도서/문화, 패션/뷰티 집중적\n",
    "\n",
    "for idx in random.sample(list(teenager.index),1200):   #랜덤으로 1200개 골라서 데이터 변환 진행\n",
    "    if df.loc[idx,'detail_product'] in ['도서/문화','패션/뷰티']:   #도서/문화, 패션/뷰티는 그대로\n",
    "        pass\n",
    "    else:\n",
    "        \n",
    "        # 10대의 구매건수를 줄이기 위해 20,30,40대로 바꿔줌\n",
    "        df.loc[idx,'cusno']=np.nan                         \n",
    "        df.loc[idx,'age']=random.randint(20,49)\n",
    "        df.loc[idx,'age_c']=str(df.loc[idx,'age'])[0]+'0대'\n",
    "        \n",
    "        # 나머지 세부 제품별 product, price, quantity를 조정해줌\n",
    "        if df.loc[idx,'detail_product']== ['식품']:                       \n",
    "            df.loc[idx,'product']=30\n",
    "            df.loc[idx,'price']=np.random.uniform(1000,30001)\n",
    "            df.loc[idx,'quantity']=np.random.randint(1,100)\n",
    "            \n",
    "        elif df.loc[idx,'detail_product'] in ['스포츠/레저','가구/생활']:\n",
    "            df.loc[idx,'product']=20\n",
    "            df.loc[idx,'price']=np.random.uniform(30000,20000)\n",
    "            df.loc[idx,'quantity']=np.random.randint(1,50) \n",
    "            \n",
    "        elif df.loc[idx,'detail_product'] in ['항공','호텔/리조트','디지털/가전']:\n",
    "            df.loc[idx,'product']=10\n",
    "            df.loc[idx,'price']=np.random.uniform(200000,500001)\n",
    "            df.loc[idx,'quantity']=np.random.randint(10,11)\n",
    "            \n",
    "        # amount역시 다시 수정    \n",
    "        df.loc[idx,'amount']=df.loc[idx,'price']*df.loc[idx,'quantity']    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 327,
   "id": "0ff11bee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "887\n"
     ]
    }
   ],
   "source": [
    "#10대 불린인덱싱: 1200개 중에서 도서/문화, 패션/뷰티 제외한 데이터가 수정됐음을 알 수 있음\n",
    "\n",
    "teenager=df[(df['age']<20)]\n",
    "print(len(teenager))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 328,
   "id": "d0fcd716",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1712\n"
     ]
    }
   ],
   "source": [
    "#60대 \n",
    "\n",
    "elder=df[(df['age']>=60)]    \n",
    "print(len(elder))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 329,
   "id": "d73466f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 제품별 데이터 세부내역 수정\n",
    "\n",
    "for idx in random.sample(list(elder.index),900):      #랜덤으로 900개 골라서 데이터 변환 진행  \n",
    "    if df.loc[idx,'detail_product'] in ['항공','호텔/리조트','스포츠/레저']:   #항공, 호텔/리조트,스포츠/레저는 그대로\n",
    "        pass\n",
    "    else:\n",
    "\n",
    "        # 60대의 구매건수를 줄이기 위해 20,30,40,50대로 바꿔줌\n",
    "        df.loc[idx,'cusno']=np.nan\n",
    "        df.loc[idx,'age']=random.randint(20,59)\n",
    "        df.loc[idx,'age_c']=str(df.loc[idx,'age'])[0]+'0대'\n",
    "        \n",
    "        # 나머지 세부 제품별 product, price, quantity를 조정해줌\n",
    "        if df.loc[idx,'detail_product']== ['식품','도서/문화']:\n",
    "            df.loc[idx,'product']=30\n",
    "            df.loc[idx,'price']=np.random.uniform(1000,30001)\n",
    "            df.loc[idx,'quantity']=np.random.randint(1,100)\n",
    "        elif df.loc[idx,'detail_product'] in ['패션/뷰티','가구/생활']:\n",
    "            df.loc[idx,'product']=20\n",
    "            df.loc[idx,'price']=np.random.uniform(30000,20000)\n",
    "            df.loc[idx,'quantity']=np.random.randint(1,50) \n",
    "        elif df.loc[idx,'detail_product'] in ['디지털/가전']:\n",
    "            df.loc[idx,'product']=10\n",
    "            df.loc[idx,'price']=np.random.uniform(200000,500001)\n",
    "            df.loc[idx,'quantity']=np.random.randint(10,11)\n",
    "            \n",
    "        # amount역시 다시 수정 \n",
    "        df.loc[idx,'amount']=df.loc[idx,'price']*df.loc[idx,'quantity']    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "id": "3ad2b9f4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1100\n"
     ]
    }
   ],
   "source": [
    "elder=df[(df['age']>=60)]    \n",
    "print(len(elder))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 331,
   "id": "be0e6925",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_c</th>\n",
       "      <th>10대</th>\n",
       "      <th>20대</th>\n",
       "      <th>30대</th>\n",
       "      <th>40대</th>\n",
       "      <th>50대</th>\n",
       "      <th>60대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>detail_product</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>가구/생활</th>\n",
       "      <td>36</td>\n",
       "      <td>117</td>\n",
       "      <td>127</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>도서/문화</th>\n",
       "      <td>148</td>\n",
       "      <td>148</td>\n",
       "      <td>154</td>\n",
       "      <td>152</td>\n",
       "      <td>158</td>\n",
       "      <td>68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>디지털/가전</th>\n",
       "      <td>36</td>\n",
       "      <td>119</td>\n",
       "      <td>135</td>\n",
       "      <td>133</td>\n",
       "      <td>111</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>스포츠/레저</th>\n",
       "      <td>20</td>\n",
       "      <td>120</td>\n",
       "      <td>111</td>\n",
       "      <td>84</td>\n",
       "      <td>107</td>\n",
       "      <td>87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>식품</th>\n",
       "      <td>44</td>\n",
       "      <td>173</td>\n",
       "      <td>195</td>\n",
       "      <td>211</td>\n",
       "      <td>166</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>패션/뷰티</th>\n",
       "      <td>88</td>\n",
       "      <td>115</td>\n",
       "      <td>114</td>\n",
       "      <td>97</td>\n",
       "      <td>116</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>항공</th>\n",
       "      <td>42</td>\n",
       "      <td>113</td>\n",
       "      <td>128</td>\n",
       "      <td>111</td>\n",
       "      <td>94</td>\n",
       "      <td>107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>호텔/리조트</th>\n",
       "      <td>38</td>\n",
       "      <td>104</td>\n",
       "      <td>121</td>\n",
       "      <td>103</td>\n",
       "      <td>95</td>\n",
       "      <td>102</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_c           10대  20대  30대  40대  50대  60대\n",
       "detail_product                              \n",
       "가구/생활            36  117  127  140   90   46\n",
       "도서/문화           148  148  154  152  158   68\n",
       "디지털/가전           36  119  135  133  111   42\n",
       "스포츠/레저           20  120  111   84  107   87\n",
       "식품               44  173  195  211  166   64\n",
       "패션/뷰티            88  115  114   97  116   39\n",
       "항공               42  113  128  111   94  107\n",
       "호텔/리조트           38  104  121  103   95  102"
      ]
     },
     "execution_count": 331,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#20년도 연령별 세부제품 구매 수량 확인\n",
    "\n",
    "pd.crosstab(index=df[df['year']==2020].detail_product,\n",
    "                                   columns=df[df['year']==2020].age_c)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "id": "31af37fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='detail_product'>"
      ]
     },
     "execution_count": 332,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.crosstab(index=df[df['year']==2020].detail_product,\n",
    "                                   columns=df[df['year']==2020].age_c).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 333,
   "id": "ce355e7b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_c</th>\n",
       "      <th>10대</th>\n",
       "      <th>20대</th>\n",
       "      <th>30대</th>\n",
       "      <th>40대</th>\n",
       "      <th>50대</th>\n",
       "      <th>60대</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>detail_product</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>가구/생활</th>\n",
       "      <td>33</td>\n",
       "      <td>110</td>\n",
       "      <td>126</td>\n",
       "      <td>116</td>\n",
       "      <td>95</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>도서/문화</th>\n",
       "      <td>142</td>\n",
       "      <td>147</td>\n",
       "      <td>171</td>\n",
       "      <td>167</td>\n",
       "      <td>156</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>디지털/가전</th>\n",
       "      <td>36</td>\n",
       "      <td>109</td>\n",
       "      <td>109</td>\n",
       "      <td>129</td>\n",
       "      <td>109</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>스포츠/레저</th>\n",
       "      <td>26</td>\n",
       "      <td>101</td>\n",
       "      <td>120</td>\n",
       "      <td>108</td>\n",
       "      <td>99</td>\n",
       "      <td>81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>식품</th>\n",
       "      <td>43</td>\n",
       "      <td>137</td>\n",
       "      <td>175</td>\n",
       "      <td>193</td>\n",
       "      <td>144</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>패션/뷰티</th>\n",
       "      <td>98</td>\n",
       "      <td>98</td>\n",
       "      <td>110</td>\n",
       "      <td>126</td>\n",
       "      <td>113</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>항공</th>\n",
       "      <td>29</td>\n",
       "      <td>105</td>\n",
       "      <td>127</td>\n",
       "      <td>130</td>\n",
       "      <td>105</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>호텔/리조트</th>\n",
       "      <td>28</td>\n",
       "      <td>93</td>\n",
       "      <td>130</td>\n",
       "      <td>90</td>\n",
       "      <td>103</td>\n",
       "      <td>96</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_c           10대  20대  30대  40대  50대  60대\n",
       "detail_product                              \n",
       "가구/생활            33  110  126  116   95   50\n",
       "도서/문화           142  147  171  167  156   66\n",
       "디지털/가전           36  109  109  129  109   46\n",
       "스포츠/레저           26  101  120  108   99   81\n",
       "식품               43  137  175  193  144   58\n",
       "패션/뷰티            98   98  110  126  113   58\n",
       "항공               29  105  127  130  105   90\n",
       "호텔/리조트           28   93  130   90  103   96"
      ]
     },
     "execution_count": 333,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#21년도 연령별 세부제품 구매 수량 확인\n",
    "\n",
    "pd.crosstab(index=df[df['year']==2021].detail_product,\n",
    "                                   columns=df[df['year']==2021].age_c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 334,
   "id": "f6f7f215",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='detail_product'>"
      ]
     },
     "execution_count": 334,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pd.crosstab(index=df[df['year']==2021].detail_product,\n",
    "                                   columns=df[df['year']==2021].age_c).plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 335,
   "id": "6c472bcb",
   "metadata": {},
   "outputs": [],
   "source": [
    "#10대의 도서/문화, 패션/뷰티를 제외하고 구매량이 감소한 것을 확인\n",
    "#60대도 항공, 호텔/리조트,스포츠/레저 제외하고 어느정도 구매량이 감소한 것을 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "id": "d9e60025",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>region</th>\n",
       "      <th>age</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "      <th>product</th>\n",
       "      <th>detail_product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024710</td>\n",
       "      <td>1165.0</td>\n",
       "      <td>male</td>\n",
       "      <td>서울</td>\n",
       "      <td>11</td>\n",
       "      <td>10대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "      <td>패션/뷰티</td>\n",
       "      <td>44326.65</td>\n",
       "      <td>40</td>\n",
       "      <td>1773066.00</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>5</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022356</td>\n",
       "      <td>1643.0</td>\n",
       "      <td>male</td>\n",
       "      <td>전남</td>\n",
       "      <td>43</td>\n",
       "      <td>40대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>30</td>\n",
       "      <td>식품</td>\n",
       "      <td>17444.38</td>\n",
       "      <td>99</td>\n",
       "      <td>1726993.62</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>6</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2035542</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>female</td>\n",
       "      <td>강원</td>\n",
       "      <td>23</td>\n",
       "      <td>20대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>253813.58</td>\n",
       "      <td>1</td>\n",
       "      <td>253813.58</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>9</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020000</td>\n",
       "      <td>1484.0</td>\n",
       "      <td>male</td>\n",
       "      <td>충북</td>\n",
       "      <td>69</td>\n",
       "      <td>60대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "      <td>도서/문화</td>\n",
       "      <td>29518.74</td>\n",
       "      <td>46</td>\n",
       "      <td>1357862.04</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>10</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017004</td>\n",
       "      <td>NaN</td>\n",
       "      <td>female</td>\n",
       "      <td>부산</td>\n",
       "      <td>44</td>\n",
       "      <td>40대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "      <td>도서/문화</td>\n",
       "      <td>17038.84</td>\n",
       "      <td>39</td>\n",
       "      <td>664514.76</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>10</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        id   cusno  gender region  age age_c    funnels     event  product  \\\n",
       "0  2024710  1165.0    male     서울   11   10대  sns 홍보사이트       NaN       20   \n",
       "1  2022356  1643.0    male     전남   43   40대      쿠팡 어플  첫구매 100원       30   \n",
       "2  2035542  1938.0  female     강원   23   20대      외부 채널       NaN       10   \n",
       "3  2020000  1484.0    male     충북   69   60대  sns 홍보사이트       NaN       30   \n",
       "4  2017004     NaN  female     부산   44   40대      쿠팡 어플       NaN       30   \n",
       "\n",
       "  detail_product      price  quantity      amount       date day  time  year  \n",
       "0          패션/뷰티   44326.65        40  1773066.00 2020-01-01   수     5  2020  \n",
       "1             식품   17444.38        99  1726993.62 2020-01-01   수     6  2020  \n",
       "2             항공  253813.58         1   253813.58 2020-01-01   수     9  2020  \n",
       "3          도서/문화   29518.74        46  1357862.04 2020-01-01   수    10  2020  \n",
       "4          도서/문화   17038.84        39   664514.76 2020-01-01   수    10  2020  "
      ]
     },
     "execution_count": 336,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = df[(df['age_c']=='40대')|(df['age_c']=='50대')].sample(frac=0.8)\n",
    "df1['event']='첫구매 100원'\n",
    "df1.head()\n",
    "df['event']=df1['event']\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8814c0c",
   "metadata": {},
   "source": [
    "#### 고객의 구매 감소 요인 만들기\n",
    "- 배경: 지속된 코로나 상황에서 n인 이상 집합 금지로 스포츠 활동이 줄어들었으며, 이용가능한 호텔 객실 수 감소, 마스크 미착용 시 벌금 부여 등 거리두기가 강화된 상황 \n",
    "\n",
    "- 어떤 인사이트를 도출할까?\n",
    "1. 스포츠/레저를 즐겨사는 20-30대 남자들 구매가 감소\n",
    "\n",
    "2. 20-30대 후반의 패션/뷰티 제품 구매가 감소함  \n",
    "\n",
    "3. 21년도 고가제품보다 중저가 제품이 많아짐\n",
    "    - 21년도 항공,호텔/리조트 등 고가제품 구매가 감소함\n",
    "    - 30-50대 여성의 식품, 가구/생활, 중저가 제품 구매가 증가함\n",
    "    - 10-20대의 도서/문화 저가 제품 구매가 증가함 "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b23c041e",
   "metadata": {},
   "source": [
    "#### 20년도 항공기 예약 건수를 줄이기-> 패션/뷰티, 레저/스포츠 20,30대의 구매 건수 증가 \n",
    "- 21년도 구매감소를 확연하게 보여주기 위함\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 337,
   "id": "574d1e32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "595"
      ]
     },
     "execution_count": 337,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#세부제품이 항공인 것을 불린인덱싱\n",
    "\n",
    "airplane20=df[(df['detail_product']=='항공')&(df['date'].dt.year==2020)]\n",
    "len(airplane20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "id": "1a2dc40f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "\n",
    "for idx in random.sample(list(airplane20.index),300):      #랜덤으로 300개 골라서 데이터 변환 진행  \n",
    "    df.loc[idx,'cusno']=np.nan\n",
    "    df.loc[idx,'detail_product']=random.choice(['패션/뷰티','스포츠/레저'])\n",
    "    df.loc[idx,'age']=random.randint(20,39)\n",
    "    df.loc[idx,'age_c']=str(df.loc[idx,'age'])[0]+'0대'\n",
    "    df.loc[idx,'product']=20\n",
    "    df.loc[idx,'price']=np.random.uniform(30000,200001)\n",
    "    df.loc[idx,'quantity']=np.random.randint(10,50)\n",
    "    df.loc[idx,'amount']=df.loc[idx,'price']*df.loc[idx,'quantity']\n",
    "    \n",
    "    #패션/뷰티는 여자, 스포츠/레저는 남자로 변환\n",
    "    if df.loc[idx,'detail_product']=='패션/뷰티':\n",
    "        df.loc[idx,'gender']='female'\n",
    "    elif df.loc[idx,'detail_product']=='스포츠/레저':\n",
    "        df.loc[idx,'gender']='male'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 339,
   "id": "d5753df0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>region</th>\n",
       "      <th>age</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "      <th>product</th>\n",
       "      <th>detail_product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2035542</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>female</td>\n",
       "      <td>강원</td>\n",
       "      <td>23</td>\n",
       "      <td>20대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>253813.58</td>\n",
       "      <td>1</td>\n",
       "      <td>253813.58</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>9</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2030135</td>\n",
       "      <td>1133.0</td>\n",
       "      <td>female</td>\n",
       "      <td>전북</td>\n",
       "      <td>39</td>\n",
       "      <td>30대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>368065.13</td>\n",
       "      <td>5</td>\n",
       "      <td>1840325.65</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>17</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>2037599</td>\n",
       "      <td>1714.0</td>\n",
       "      <td>male</td>\n",
       "      <td>경기</td>\n",
       "      <td>39</td>\n",
       "      <td>30대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>443304.84</td>\n",
       "      <td>10</td>\n",
       "      <td>4433048.40</td>\n",
       "      <td>2020-01-04</td>\n",
       "      <td>토</td>\n",
       "      <td>18</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>2034922</td>\n",
       "      <td>1349.0</td>\n",
       "      <td>male</td>\n",
       "      <td>강원</td>\n",
       "      <td>48</td>\n",
       "      <td>40대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>237028.45</td>\n",
       "      <td>2</td>\n",
       "      <td>474056.90</td>\n",
       "      <td>2020-01-05</td>\n",
       "      <td>일</td>\n",
       "      <td>12</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>2046364</td>\n",
       "      <td>1176.0</td>\n",
       "      <td>female</td>\n",
       "      <td>서울</td>\n",
       "      <td>21</td>\n",
       "      <td>20대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>270804.41</td>\n",
       "      <td>5</td>\n",
       "      <td>1354022.05</td>\n",
       "      <td>2020-01-05</td>\n",
       "      <td>일</td>\n",
       "      <td>19</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4988</th>\n",
       "      <td>2010805</td>\n",
       "      <td>1632.0</td>\n",
       "      <td>female</td>\n",
       "      <td>전남</td>\n",
       "      <td>54</td>\n",
       "      <td>50대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>285748.10</td>\n",
       "      <td>5</td>\n",
       "      <td>1428740.50</td>\n",
       "      <td>2020-12-26</td>\n",
       "      <td>토</td>\n",
       "      <td>16</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5020</th>\n",
       "      <td>2023924</td>\n",
       "      <td>1236.0</td>\n",
       "      <td>female</td>\n",
       "      <td>충남</td>\n",
       "      <td>41</td>\n",
       "      <td>40대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>406839.54</td>\n",
       "      <td>6</td>\n",
       "      <td>2441037.24</td>\n",
       "      <td>2020-12-29</td>\n",
       "      <td>화</td>\n",
       "      <td>2</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5024</th>\n",
       "      <td>2045761</td>\n",
       "      <td>1069.0</td>\n",
       "      <td>male</td>\n",
       "      <td>경남</td>\n",
       "      <td>33</td>\n",
       "      <td>30대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>316045.81</td>\n",
       "      <td>5</td>\n",
       "      <td>1580229.05</td>\n",
       "      <td>2020-12-29</td>\n",
       "      <td>화</td>\n",
       "      <td>9</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5026</th>\n",
       "      <td>2013087</td>\n",
       "      <td>1853.0</td>\n",
       "      <td>female</td>\n",
       "      <td>전북</td>\n",
       "      <td>19</td>\n",
       "      <td>10대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>404858.78</td>\n",
       "      <td>7</td>\n",
       "      <td>2834011.46</td>\n",
       "      <td>2020-12-29</td>\n",
       "      <td>화</td>\n",
       "      <td>14</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5052</th>\n",
       "      <td>2043663</td>\n",
       "      <td>1489.0</td>\n",
       "      <td>male</td>\n",
       "      <td>경남</td>\n",
       "      <td>48</td>\n",
       "      <td>40대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>393054.67</td>\n",
       "      <td>8</td>\n",
       "      <td>3144437.36</td>\n",
       "      <td>2020-12-31</td>\n",
       "      <td>목</td>\n",
       "      <td>7</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>295 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id   cusno  gender region  age age_c    funnels     event  product  \\\n",
       "2     2035542  1938.0  female     강원   23   20대      외부 채널       NaN       10   \n",
       "9     2030135  1133.0  female     전북   39   30대  sns 홍보사이트       NaN       10   \n",
       "36    2037599  1714.0    male     경기   39   30대      쿠팡 어플       NaN       10   \n",
       "48    2034922  1349.0    male     강원   48   40대  sns 홍보사이트  첫구매 100원       10   \n",
       "52    2046364  1176.0  female     서울   21   20대  sns 홍보사이트       NaN       10   \n",
       "...       ...     ...     ...    ...  ...   ...        ...       ...      ...   \n",
       "4988  2010805  1632.0  female     전남   54   50대  sns 홍보사이트  첫구매 100원       10   \n",
       "5020  2023924  1236.0  female     충남   41   40대      쿠팡 어플  첫구매 100원       10   \n",
       "5024  2045761  1069.0    male     경남   33   30대  sns 홍보사이트       NaN       10   \n",
       "5026  2013087  1853.0  female     전북   19   10대      쿠팡 어플       NaN       10   \n",
       "5052  2043663  1489.0    male     경남   48   40대     온라인사이트  첫구매 100원       10   \n",
       "\n",
       "     detail_product      price  quantity      amount       date day  time  \\\n",
       "2                항공  253813.58         1   253813.58 2020-01-01   수     9   \n",
       "9                항공  368065.13         5  1840325.65 2020-01-01   수    17   \n",
       "36               항공  443304.84        10  4433048.40 2020-01-04   토    18   \n",
       "48               항공  237028.45         2   474056.90 2020-01-05   일    12   \n",
       "52               항공  270804.41         5  1354022.05 2020-01-05   일    19   \n",
       "...             ...        ...       ...         ...        ...  ..   ...   \n",
       "4988             항공  285748.10         5  1428740.50 2020-12-26   토    16   \n",
       "5020             항공  406839.54         6  2441037.24 2020-12-29   화     2   \n",
       "5024             항공  316045.81         5  1580229.05 2020-12-29   화     9   \n",
       "5026             항공  404858.78         7  2834011.46 2020-12-29   화    14   \n",
       "5052             항공  393054.67         8  3144437.36 2020-12-31   목     7   \n",
       "\n",
       "      year  \n",
       "2     2020  \n",
       "9     2020  \n",
       "36    2020  \n",
       "48    2020  \n",
       "52    2020  \n",
       "...    ...  \n",
       "4988  2020  \n",
       "5020  2020  \n",
       "5024  2020  \n",
       "5026  2020  \n",
       "5052  2020  \n",
       "\n",
       "[295 rows x 17 columns]"
      ]
     },
     "execution_count": 339,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#세부제품이 항공인 것을 불린인덱싱\n",
    "\n",
    "airplane20=df[(df['detail_product']=='항공')&(df['date'].dt.year==2020)]\n",
    "airplane20"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b6045fa",
   "metadata": {},
   "source": [
    "#### 21년도 항공기 예약 건수를 줄이기-> 40,50대의 식품 구매 건수 증가/30, 40,50대의 가구/생활 구매 건수 증가"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 340,
   "id": "938dfe83",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "586"
      ]
     },
     "execution_count": 340,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#세부제품이 항공인 것을 불린인덱싱\n",
    "\n",
    "airplane21=df[(df['detail_product']=='항공')&(df['date'].dt.year==2021)]\n",
    "len(airplane21)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 341,
   "id": "149ca6ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "for idx in random.sample(list(airplane21.index),400): #랜덤으로 400개 골라서 데이터 변환 진행\n",
    "    \n",
    "    #세부제품을 식품, 가구/생활로 변환\n",
    "    df.loc[idx,'detail_product']=random.choice(['식품','가구/생활'])\n",
    "    df.loc[idx,'cusno']=np.nan\n",
    "    \n",
    "    #식품의 경우 30,40,50대 여자가 되도록\n",
    "    if df.loc[idx,'detail_product']=='식품':\n",
    "        df.loc[idx,'gender']=random.choice(['female'])\n",
    "        df.loc[idx,'age']=random.randint(30,49)\n",
    "        df.loc[idx,'age_c']=str(df.loc[idx,'age'])[0]+'0대'\n",
    "        df.loc[idx,'product']=30\n",
    "        df.loc[idx,'price']=np.random.uniform(1000,30001)\n",
    "        df.loc[idx,'quantity']=np.random.randint(1,100)\n",
    "        df.loc[idx,'amount']=df.loc[idx,'price']*df.loc[idx,'quantity']\n",
    "        \n",
    "    #가구/생활의 경우 30,40,50대가 되도록\n",
    "    elif df.loc[idx,'detail_product']=='가구/생활':\n",
    "        df.loc[idx,'detail_product']=random.choice(['가구/생활'])\n",
    "        df.loc[idx,'gender']=random.choice(['female','male'])\n",
    "        df.loc[idx,'age']=random.randint(30,59)\n",
    "        df.loc[idx,'age_c']=str(df.loc[idx,'age'])[0]+'0대'\n",
    "        df.loc[idx,'product']=20\n",
    "        df.loc[idx,'price']=np.random.uniform(30000,200001)\n",
    "        df.loc[idx,'quantity']=np.random.randint(1,20)\n",
    "        df.loc[idx,'amount']=df.loc[idx,'price']*df.loc[idx,'quantity']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 342,
   "id": "18573cd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>region</th>\n",
       "      <th>age</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "      <th>product</th>\n",
       "      <th>detail_product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5151</th>\n",
       "      <td>2147062</td>\n",
       "      <td>1834.0</td>\n",
       "      <td>female</td>\n",
       "      <td>전북</td>\n",
       "      <td>68</td>\n",
       "      <td>60대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>256771.280000</td>\n",
       "      <td>4</td>\n",
       "      <td>1.027085e+06</td>\n",
       "      <td>2021-01-06</td>\n",
       "      <td>수</td>\n",
       "      <td>20</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5196</th>\n",
       "      <td>2112599</td>\n",
       "      <td>1130.0</td>\n",
       "      <td>female</td>\n",
       "      <td>경북</td>\n",
       "      <td>57</td>\n",
       "      <td>50대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>494416.680000</td>\n",
       "      <td>9</td>\n",
       "      <td>4.449750e+06</td>\n",
       "      <td>2021-01-10</td>\n",
       "      <td>일</td>\n",
       "      <td>1</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5255</th>\n",
       "      <td>2119190</td>\n",
       "      <td>1914.0</td>\n",
       "      <td>female</td>\n",
       "      <td>서울</td>\n",
       "      <td>50</td>\n",
       "      <td>50대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>298733.670000</td>\n",
       "      <td>4</td>\n",
       "      <td>1.194935e+06</td>\n",
       "      <td>2021-01-14</td>\n",
       "      <td>목</td>\n",
       "      <td>17</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5291</th>\n",
       "      <td>2129465</td>\n",
       "      <td>NaN</td>\n",
       "      <td>female</td>\n",
       "      <td>서울</td>\n",
       "      <td>35</td>\n",
       "      <td>30대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>235933.716015</td>\n",
       "      <td>10</td>\n",
       "      <td>2.359337e+06</td>\n",
       "      <td>2021-01-17</td>\n",
       "      <td>일</td>\n",
       "      <td>11</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5307</th>\n",
       "      <td>2112163</td>\n",
       "      <td>1301.0</td>\n",
       "      <td>female</td>\n",
       "      <td>서울</td>\n",
       "      <td>51</td>\n",
       "      <td>50대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>422413.550000</td>\n",
       "      <td>6</td>\n",
       "      <td>2.534481e+06</td>\n",
       "      <td>2021-01-18</td>\n",
       "      <td>월</td>\n",
       "      <td>23</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9946</th>\n",
       "      <td>2113099</td>\n",
       "      <td>1258.0</td>\n",
       "      <td>female</td>\n",
       "      <td>부산</td>\n",
       "      <td>41</td>\n",
       "      <td>40대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>390788.430000</td>\n",
       "      <td>2</td>\n",
       "      <td>7.815769e+05</td>\n",
       "      <td>2021-12-27</td>\n",
       "      <td>월</td>\n",
       "      <td>18</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9957</th>\n",
       "      <td>2111531</td>\n",
       "      <td>1473.0</td>\n",
       "      <td>male</td>\n",
       "      <td>경기</td>\n",
       "      <td>55</td>\n",
       "      <td>50대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>367386.480000</td>\n",
       "      <td>10</td>\n",
       "      <td>3.673865e+06</td>\n",
       "      <td>2021-12-28</td>\n",
       "      <td>화</td>\n",
       "      <td>13</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9969</th>\n",
       "      <td>2124815</td>\n",
       "      <td>1961.0</td>\n",
       "      <td>female</td>\n",
       "      <td>부산</td>\n",
       "      <td>44</td>\n",
       "      <td>40대</td>\n",
       "      <td>온라인사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>269770.370000</td>\n",
       "      <td>5</td>\n",
       "      <td>1.348852e+06</td>\n",
       "      <td>2021-12-29</td>\n",
       "      <td>수</td>\n",
       "      <td>8</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9982</th>\n",
       "      <td>2116502</td>\n",
       "      <td>1036.0</td>\n",
       "      <td>female</td>\n",
       "      <td>충북</td>\n",
       "      <td>42</td>\n",
       "      <td>40대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>362168.160000</td>\n",
       "      <td>9</td>\n",
       "      <td>3.259513e+06</td>\n",
       "      <td>2021-12-30</td>\n",
       "      <td>목</td>\n",
       "      <td>9</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9994</th>\n",
       "      <td>2149437</td>\n",
       "      <td>1167.0</td>\n",
       "      <td>male</td>\n",
       "      <td>경기</td>\n",
       "      <td>31</td>\n",
       "      <td>30대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>321415.190000</td>\n",
       "      <td>4</td>\n",
       "      <td>1.285661e+06</td>\n",
       "      <td>2021-12-31</td>\n",
       "      <td>금</td>\n",
       "      <td>14</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>186 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id   cusno  gender region  age age_c    funnels     event  product  \\\n",
       "5151  2147062  1834.0  female     전북   68   60대     온라인사이트       NaN       10   \n",
       "5196  2112599  1130.0  female     경북   57   50대     온라인사이트       NaN       10   \n",
       "5255  2119190  1914.0  female     서울   50   50대      외부 채널  첫구매 100원       10   \n",
       "5291  2129465     NaN  female     서울   35   30대     온라인사이트       NaN       10   \n",
       "5307  2112163  1301.0  female     서울   51   50대  sns 홍보사이트  첫구매 100원       10   \n",
       "...       ...     ...     ...    ...  ...   ...        ...       ...      ...   \n",
       "9946  2113099  1258.0  female     부산   41   40대  sns 홍보사이트       NaN       10   \n",
       "9957  2111531  1473.0    male     경기   55   50대     온라인사이트       NaN       10   \n",
       "9969  2124815  1961.0  female     부산   44   40대     온라인사이트  첫구매 100원       10   \n",
       "9982  2116502  1036.0  female     충북   42   40대  sns 홍보사이트  첫구매 100원       10   \n",
       "9994  2149437  1167.0    male     경기   31   30대      외부 채널       NaN       10   \n",
       "\n",
       "     detail_product          price  quantity        amount       date day  \\\n",
       "5151             항공  256771.280000         4  1.027085e+06 2021-01-06   수   \n",
       "5196             항공  494416.680000         9  4.449750e+06 2021-01-10   일   \n",
       "5255             항공  298733.670000         4  1.194935e+06 2021-01-14   목   \n",
       "5291             항공  235933.716015        10  2.359337e+06 2021-01-17   일   \n",
       "5307             항공  422413.550000         6  2.534481e+06 2021-01-18   월   \n",
       "...             ...            ...       ...           ...        ...  ..   \n",
       "9946             항공  390788.430000         2  7.815769e+05 2021-12-27   월   \n",
       "9957             항공  367386.480000        10  3.673865e+06 2021-12-28   화   \n",
       "9969             항공  269770.370000         5  1.348852e+06 2021-12-29   수   \n",
       "9982             항공  362168.160000         9  3.259513e+06 2021-12-30   목   \n",
       "9994             항공  321415.190000         4  1.285661e+06 2021-12-31   금   \n",
       "\n",
       "      time  year  \n",
       "5151    20  2021  \n",
       "5196     1  2021  \n",
       "5255    17  2021  \n",
       "5291    11  2021  \n",
       "5307    23  2021  \n",
       "...    ...   ...  \n",
       "9946    18  2021  \n",
       "9957    13  2021  \n",
       "9969     8  2021  \n",
       "9982     9  2021  \n",
       "9994    14  2021  \n",
       "\n",
       "[186 rows x 17 columns]"
      ]
     },
     "execution_count": 342,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#세부제품이 항공인 것을 불린인덱싱\n",
    "\n",
    "airplane21=df[(df['detail_product']=='항공')&(df['date'].dt.year==2021)]\n",
    "airplane21"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 343,
   "id": "50d5000d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>cusno</th>\n",
       "      <th>gender</th>\n",
       "      <th>region</th>\n",
       "      <th>age</th>\n",
       "      <th>age_c</th>\n",
       "      <th>funnels</th>\n",
       "      <th>event</th>\n",
       "      <th>product</th>\n",
       "      <th>detail_product</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>amount</th>\n",
       "      <th>date</th>\n",
       "      <th>day</th>\n",
       "      <th>time</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024710</td>\n",
       "      <td>1165.0</td>\n",
       "      <td>male</td>\n",
       "      <td>서울</td>\n",
       "      <td>11</td>\n",
       "      <td>10대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>20</td>\n",
       "      <td>패션/뷰티</td>\n",
       "      <td>44326.65</td>\n",
       "      <td>40</td>\n",
       "      <td>1773066.00</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>5</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022356</td>\n",
       "      <td>1643.0</td>\n",
       "      <td>male</td>\n",
       "      <td>전남</td>\n",
       "      <td>43</td>\n",
       "      <td>40대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>첫구매 100원</td>\n",
       "      <td>30</td>\n",
       "      <td>식품</td>\n",
       "      <td>17444.38</td>\n",
       "      <td>99</td>\n",
       "      <td>1726993.62</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>6</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2035542</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>female</td>\n",
       "      <td>강원</td>\n",
       "      <td>23</td>\n",
       "      <td>20대</td>\n",
       "      <td>외부 채널</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>항공</td>\n",
       "      <td>253813.58</td>\n",
       "      <td>1</td>\n",
       "      <td>253813.58</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>9</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020000</td>\n",
       "      <td>1484.0</td>\n",
       "      <td>male</td>\n",
       "      <td>충북</td>\n",
       "      <td>69</td>\n",
       "      <td>60대</td>\n",
       "      <td>sns 홍보사이트</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "      <td>도서/문화</td>\n",
       "      <td>29518.74</td>\n",
       "      <td>46</td>\n",
       "      <td>1357862.04</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>10</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2017004</td>\n",
       "      <td>NaN</td>\n",
       "      <td>female</td>\n",
       "      <td>부산</td>\n",
       "      <td>44</td>\n",
       "      <td>40대</td>\n",
       "      <td>쿠팡 어플</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30</td>\n",
       "      <td>도서/문화</td>\n",
       "      <td>17038.84</td>\n",
       "      <td>39</td>\n",
       "      <td>664514.76</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>수</td>\n",
       "      <td>10</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        id   cusno  gender region  age age_c    funnels     event  product  \\\n",
       "0  2024710  1165.0    male     서울   11   10대  sns 홍보사이트       NaN       20   \n",
       "1  2022356  1643.0    male     전남   43   40대      쿠팡 어플  첫구매 100원       30   \n",
       "2  2035542  1938.0  female     강원   23   20대      외부 채널       NaN       10   \n",
       "3  2020000  1484.0    male     충북   69   60대  sns 홍보사이트       NaN       30   \n",
       "4  2017004     NaN  female     부산   44   40대      쿠팡 어플       NaN       30   \n",
       "\n",
       "  detail_product      price  quantity      amount       date day  time  year  \n",
       "0          패션/뷰티   44326.65        40  1773066.00 2020-01-01   수     5  2020  \n",
       "1             식품   17444.38        99  1726993.62 2020-01-01   수     6  2020  \n",
       "2             항공  253813.58         1   253813.58 2020-01-01   수     9  2020  \n",
       "3          도서/문화   29518.74        46  1357862.04 2020-01-01   수    10  2020  \n",
       "4          도서/문화   17038.84        39   664514.76 2020-01-01   수    10  2020  "
      ]
     },
     "execution_count": 343,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d29ead0",
   "metadata": {},
   "source": [
    "### 데이터 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 344,
   "id": "0d9a3e34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10000 entries, 0 to 9999\n",
      "Data columns (total 17 columns):\n",
      " #   Column          Non-Null Count  Dtype         \n",
      "---  ------          --------------  -----         \n",
      " 0   id              10000 non-null  object        \n",
      " 1   cusno           7909 non-null   float64       \n",
      " 2   gender          10000 non-null  object        \n",
      " 3   region          10000 non-null  object        \n",
      " 4   age             10000 non-null  int32         \n",
      " 5   age_c           10000 non-null  object        \n",
      " 6   funnels         10000 non-null  object        \n",
      " 7   event           3161 non-null   object        \n",
      " 8   product         10000 non-null  int64         \n",
      " 9   detail_product  10000 non-null  object        \n",
      " 10  price           10000 non-null  float64       \n",
      " 11  quantity        10000 non-null  int64         \n",
      " 12  amount          10000 non-null  float64       \n",
      " 13  date            10000 non-null  datetime64[ns]\n",
      " 14  day             10000 non-null  object        \n",
      " 15  time            10000 non-null  int32         \n",
      " 16  year            10000 non-null  int64         \n",
      "dtypes: datetime64[ns](1), float64(3), int32(2), int64(3), object(8)\n",
      "memory usage: 1.2+ MB\n"
     ]
    }
   ],
   "source": [
    "#데이터에 수정을 가해서 cusno를 null값으로 바꿔준 고객 수 확인\n",
    "\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 345,
   "id": "29876451",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1173.0    20\n",
       "1706.0    19\n",
       "1665.0    17\n",
       "1949.0    17\n",
       "1403.0    17\n",
       "          ..\n",
       "1921.0     1\n",
       "1252.0     1\n",
       "1662.0     1\n",
       "1607.0     1\n",
       "1785.0     1\n",
       "Name: cusno, Length: 999, dtype: int64"
      ]
     },
     "execution_count": 345,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['cusno'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 346,
   "id": "e24a2dcb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       1165.0\n",
       "1       1643.0\n",
       "2       1938.0\n",
       "3       1484.0\n",
       "4          NaN\n",
       "         ...  \n",
       "9995    1301.0\n",
       "9996    1299.0\n",
       "9997       NaN\n",
       "9998    1816.0\n",
       "9999    1641.0\n",
       "Name: cusno, Length: 10000, dtype: float64"
      ]
     },
     "execution_count": 346,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['cusno']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 347,
   "id": "0cc115be",
   "metadata": {},
   "outputs": [],
   "source": [
    "# cusno 그룹화 후 일괄 수정\n",
    "\n",
    "\n",
    "#그룹화\n",
    "group=df.groupby(['gender','region','age_c'])\n",
    "\n",
    "\n",
    "category=[]\n",
    "\n",
    "for g in ['male','female']:\n",
    "    for r in set(df['region']):\n",
    "        for a in set(df['age_c']):\n",
    "             category.append([g,r,a,list(group.get_group((g,r,a)).index)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 348,
   "id": "9f1fb4d4",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "Input \u001b[1;32mIn [348]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28;01mwhile\u001b[39;00m \u001b[38;5;28;01mTrue\u001b[39;00m:\n\u001b[0;32m      4\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m i,j,k,m \u001b[38;5;129;01min\u001b[39;00m category:\n\u001b[1;32m----> 6\u001b[0m         filter_condition\u001b[38;5;241m=\u001b[39m(\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mcusno\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43misnull\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m)\u001b[38;5;241m&\u001b[39m(df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mgender\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m==\u001b[39mi)\u001b[38;5;241m&\u001b[39m(df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mregion\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m==\u001b[39mj)\u001b[38;5;241m&\u001b[39m(df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mage_c\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m==\u001b[39mk)\n\u001b[0;32m      7\u001b[0m         idx_filter\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mlist\u001b[39m(df[filter_condition]\u001b[38;5;241m.\u001b[39mindex)\n\u001b[0;32m      9\u001b[0m         \u001b[38;5;28;01mfor\u001b[39;00m idx \u001b[38;5;129;01min\u001b[39;00m idx_filter:\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\cakd7\\lib\\site-packages\\pandas\\core\\series.py:5286\u001b[0m, in \u001b[0;36mSeries.isnull\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m   5281\u001b[0m \u001b[38;5;129m@doc\u001b[39m(NDFrame\u001b[38;5;241m.\u001b[39misna, klass\u001b[38;5;241m=\u001b[39m_shared_doc_kwargs[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mklass\u001b[39m\u001b[38;5;124m\"\u001b[39m])  \u001b[38;5;66;03m# type: ignore[has-type]\u001b[39;00m\n\u001b[0;32m   5282\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21misnull\u001b[39m(\u001b[38;5;28mself\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m Series:\n\u001b[0;32m   5283\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[0;32m   5284\u001b[0m \u001b[38;5;124;03m    Series.isnull is an alias for Series.isna.\u001b[39;00m\n\u001b[0;32m   5285\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m-> 5286\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43misnull\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\cakd7\\lib\\site-packages\\pandas\\core\\generic.py:7293\u001b[0m, in \u001b[0;36mNDFrame.isnull\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m   7291\u001b[0m \u001b[38;5;129m@doc\u001b[39m(isna, klass\u001b[38;5;241m=\u001b[39m_shared_doc_kwargs[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mklass\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[0;32m   7292\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21misnull\u001b[39m(\u001b[38;5;28mself\u001b[39m: NDFrameT) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m NDFrameT:\n\u001b[1;32m-> 7293\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43misna\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m)\u001b[49m\u001b[38;5;241m.\u001b[39m__finalize__(\u001b[38;5;28mself\u001b[39m, method\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124misnull\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\cakd7\\lib\\site-packages\\pandas\\core\\dtypes\\missing.py:143\u001b[0m, in \u001b[0;36misna\u001b[1;34m(obj)\u001b[0m\n\u001b[0;32m     66\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21misna\u001b[39m(obj):\n\u001b[0;32m     67\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[0;32m     68\u001b[0m \u001b[38;5;124;03m    Detect missing values for an array-like object.\u001b[39;00m\n\u001b[0;32m     69\u001b[0m \n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    141\u001b[0m \u001b[38;5;124;03m    Name: 1, dtype: bool\u001b[39;00m\n\u001b[0;32m    142\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m--> 143\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_isna\u001b[49m\u001b[43m(\u001b[49m\u001b[43mobj\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\cakd7\\lib\\site-packages\\pandas\\core\\dtypes\\missing.py:181\u001b[0m, in \u001b[0;36m_isna\u001b[1;34m(obj, inf_as_na)\u001b[0m\n\u001b[0;32m    178\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m _isna_array(obj\u001b[38;5;241m.\u001b[39m_values, inf_as_na\u001b[38;5;241m=\u001b[39minf_as_na)\n\u001b[0;32m    180\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(obj, ABCSeries):\n\u001b[1;32m--> 181\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43m_isna_array\u001b[49m\u001b[43m(\u001b[49m\u001b[43mobj\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_values\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43minf_as_na\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minf_as_na\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    182\u001b[0m     \u001b[38;5;66;03m# box\u001b[39;00m\n\u001b[0;32m    183\u001b[0m     result \u001b[38;5;241m=\u001b[39m obj\u001b[38;5;241m.\u001b[39m_constructor(result, index\u001b[38;5;241m=\u001b[39mobj\u001b[38;5;241m.\u001b[39mindex, name\u001b[38;5;241m=\u001b[39mobj\u001b[38;5;241m.\u001b[39mname, copy\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\cakd7\\lib\\site-packages\\pandas\\core\\dtypes\\missing.py:262\u001b[0m, in \u001b[0;36m_isna_array\u001b[1;34m(values, inf_as_na)\u001b[0m\n\u001b[0;32m    260\u001b[0m         result \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m~\u001b[39mnp\u001b[38;5;241m.\u001b[39misfinite(values)\n\u001b[0;32m    261\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m--> 262\u001b[0m         result \u001b[38;5;241m=\u001b[39m \u001b[43mnp\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43misnan\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    264\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m result\n",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "#cusno 수정\n",
    "\n",
    "while True:\n",
    "    for i,j,k,m in category:\n",
    "\n",
    "        filter_condition=(df['cusno'].isnull())&(df['gender']==i)&(df['region']==j)&(df['age_c']==k)\n",
    "        idx_filter=list(df[filter_condition].index)\n",
    "\n",
    "        for idx in idx_filter:\n",
    "            df.loc[idx,'cusno']=df.loc[np.random.choice(m),'cusno']\n",
    "    if df.isnull().sum().sum()==0:\n",
    "        break\n",
    "      "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "299830c9",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6d1f1cf9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#연도별 피벗테이블 작성을 위해 연도 변수 생성\n",
    "\n",
    "df['year']=df['date'].dt.year\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2808d38b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#연도별/세부 제품별 총 구매수량 및 총 구매액을 알기 위한 피벗테이블 작성\n",
    "\n",
    "#pd.options.display.float_format = '{:.2f}'.format    #과학적 표기법 x\n",
    "\n",
    "\n",
    "table3=pd.pivot_table(df,\n",
    "                     columns=['year','detail_product'],\n",
    "                     values='amount',\n",
    "                     aggfunc=['count','sum']\n",
    "                    )\n",
    "\n",
    "\n",
    "c3=table3.loc[:,'count'][2020].T.merge(table3.loc[:,'count'][2021].T, on='detail_product')\n",
    "c3.columns=['2020','2021']\n",
    "c3['2021-2020 difference']=c3['2021']-c3['2020']\n",
    "c3\n",
    "\n",
    "# 스포츠/레저, 패션/뷰티 구매량이 감소\n",
    "# 가구/생활, 식품 구매량이 증가"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1e3f5be4",
   "metadata": {},
   "outputs": [],
   "source": [
    "s3=table3.loc[:,'sum'][2020].T.merge(table3.loc[:,'sum'][2021].T, on='detail_product')\n",
    "s3.columns=['2020','2021']\n",
    "s3['2021-2020 difference']=s3['2021']-s3['2020']\n",
    "\n",
    "s3.applymap(lambda x: f'{x:,.2f}')\n",
    "\n",
    "# 억단위로 보자\n",
    "# 스포츠/레저, 패션/뷰티, 항공 구매액 감소\n",
    "# 가구/생활, 식품 구매액 증가"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dfba8638",
   "metadata": {},
   "outputs": [],
   "source": [
    "#연도별 총 구매수량 및 총 구매액을 알기 위한 피벗테이블 작성\n",
    "\n",
    "pd.options.display.float_format = '{:.2f}'.format    #과학적 표기법 x\n",
    "table4=pd.pivot_table(df,\n",
    "                     index='cusno',\n",
    "                     columns='year',\n",
    "                     values='amount',\n",
    "                     aggfunc=['count','sum']\n",
    "                    )\n",
    "\n",
    "table4.applymap(lambda x: f'{x:,.2f}').head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bf952e54",
   "metadata": {},
   "outputs": [],
   "source": [
    "#null값을 0으로 변경\n",
    "\n",
    "table4.fillna(0,inplace=True)\n",
    "table4['count']=table4['count'].astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "43877113",
   "metadata": {},
   "outputs": [],
   "source": [
    "#(20-21)총 구매횟수 차이 구하기\n",
    "table4['count_df']=table4.iloc[:,0]-table4.iloc[:,1]\n",
    "\n",
    "#(20-21)총 구매액 차이 구하기\n",
    "table4['amount_df']=table4.iloc[:,2]-table4.iloc[:,3]\n",
    "\n",
    "#(20-21)총 구매액 증감율 구하기\n",
    "table4['amount_df_per']=table4.iloc[:,3]/table4.iloc[:,2]\n",
    "\n",
    "#20년 대비 구매액 증감율\n",
    "table4['amount_df_per_20']=table4['amount_df']/table4.iloc[:,2]\n",
    "\n",
    "#총 구매액이 증가했는지 여부 확인하는 sales 변수 생성\n",
    "table4['sales']=np.where(table4['amount_df']>0,1,0)   #감소가 1\n",
    "\n",
    "#21년도 이탈 고객 여부 변수 생성\n",
    "table4['leave']=np.where(table4.iloc[:,1]==0,1,0)\n",
    "\n",
    "#21년도 새로 유입된 고객 여부 변수 생성\n",
    "table4['welcome']=np.where(table4.iloc[:,0]==0,1,0)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63f638fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 컬럼이름 바꿔주고 인덱스 삭제\n",
    "\n",
    "table4.columns=['count_2020','count_2021','amount_2020','amount_2021', 'count_df',\n",
    "              'amount_df','amount_df_per','amount_df_per_20', 'sales','leave','welcome']\n",
    "table4.reset_index(inplace=True)\n",
    "table4.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "76353234",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#20년도 대비 21년도 구매가 감소한 고객 수\n",
    "\n",
    "table4.sales.value_counts()\n",
    "\n",
    "#감소 고객수가 많은편이나 크게 차이는 나지 않음"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "577708fa",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "#20년도 대비 21년도 구매가 감소한 평균 금액 수\n",
    "\n",
    "f'{table4.amount_df.mean(): ,.2f}원'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69648ec9",
   "metadata": {},
   "source": [
    "## 인사이트 도출\n",
    "\n",
    "- 아무것도 모르는 척 데이터 탐색하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "34d7b8bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "#연도별 총 구매 횟수 확인\n",
    "\n",
    "table4.count_2020.sum(), table4.count_2021.sum() \n",
    "\n",
    "#구매횟수의 차이는 크지 않음"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8ecb0cbc",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#연도별 총 구매액 및 차액 확인\n",
    "\n",
    "print(f'2020년도 총 구매액: {table4.amount_2020.sum():,.2f}원')\n",
    "print(f'2021년도 총 구매액: {table4.amount_2021.sum():,.2f}원')\n",
    "print(f'총 구매액 차이: {(table4.amount_2021.sum()-table4.amount_2020.sum()):,.2f}원' )\n",
    "\n",
    "#그러나 총구매액은 억대로 감소함"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "69ca3baf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#데이터 살펴보기\n",
    "\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings(('ignore'))\n",
    "\n",
    "\n",
    "\n",
    "#세부 제품별, 연도별 구매수량과 차이 확인 \n",
    "table3=pd.pivot_table(df,\n",
    "                     columns=['year','detail_product'],\n",
    "                     values='amount',\n",
    "                     aggfunc=['count','sum']\n",
    "                    )\n",
    "\n",
    "table5=table3[('count',2020)].append(table3[('count',2021)])\n",
    "table5=table5.append(table5.iloc[1]-table5.iloc[0]).T\n",
    "\n",
    "table5.columns=['2020년도','2021년도','구매 수량 차이(21년도-20년도)']\n",
    "table5.T\n",
    "\n",
    "#스포츠/레저, 패션/뷰티 부문에서 많이 줄어든 것을 알 수 있음\n",
    "#하지만, 가구/생활, 식품 부문 등은 증가함"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "799ce16d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#세부 제품별, 연도별 구매액과 차이 확인\n",
    "\n",
    "table6=table3[('sum',2020)].append(table3[('sum',2021)])\n",
    "table6=table6.append(table6.iloc[1]-table6.iloc[0])\n",
    "\n",
    "table6.index=['2020년도','2021년도','구매액 차이(21년도-20년도)']\n",
    "table6.applymap(lambda x: f'{x: 0,.2f}')\n",
    "\n",
    "#구매액으로 찾아본 결과,\n",
    "#억단위로 증가한 제품은 가구/생활, 식품\n",
    "#억단위로 감소한 제품은 스포츠/레저, 패션/뷰티임"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a888c2f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#더 세부적으로 확인해보자\n",
    "#연도별/연령별 제품 구매수량 확인\n",
    "\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b6fb94e6",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#20년도\n",
    "\n",
    "table7=pd.crosstab(index=df[df['year']==2020].detail_product,\n",
    "                                   columns=df[df['year']==2020].age_c)\n",
    "table7"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "258c4cf9",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#21년도\n",
    "\n",
    "table8=pd.crosstab(index=df[df['year']==2021].detail_product,\n",
    "                                   columns=df[df['year']==2021].age_c)\n",
    "table8\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "84352874",
   "metadata": {},
   "outputs": [],
   "source": [
    "# (21-20년도)연령대별 구매횟수 차이 확인하기\n",
    "\n",
    "table8-table7\n",
    "\n",
    "#30,40대의 식품 구매량이 증가했고\n",
    "#20, 30대의 스포츠/레저, 패션/뷰티 구매량이 감소함"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "efd8c5ce",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#연도별/연령대별/성별 구매횟수 차이 확인하기\n",
    "\n",
    "table9=pd.crosstab(index=df.loc[df['year']==2020].detail_product,\n",
    "                                   columns=[df[df['year']==2020].age_c,df[df['year']==2020].gender])\n",
    "table9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "733dc87e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#연도별/연령대별/성별 구매횟수 차이 확인하기\n",
    "\n",
    "table10=pd.crosstab(index=df.loc[df['year']==2021].detail_product,\n",
    "                                   columns=[df[df['year']==2021].age_c,df[df['year']==2021].gender])\n",
    "table10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "320dda8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "table11=table10-table9\n",
    "table11"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "728d1d9f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#연도별, 연령별 제품 구매수량 시각화\n",
    "#한글 폰트 실행되도록 하기\n",
    "\n",
    "from matplotlib import font_manager, rc\n",
    "\n",
    "font_path='C:/cakd7/m2_분석라이브러리활용/visualization/dataset/malgun.ttf'\n",
    "#font_path='HANDotum.ttf'\n",
    "font_name=font_manager.FontProperties(fname=font_path).get_name()\n",
    "\n",
    "rc('font',family=font_name)\n",
    "plt.rcParams['axes.unicode_minus']=False   #마이너스 기호 깨짐 방지\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4a5d36b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# table11.columns=['10대_여','10대_남','20대_여','20대_남','30대_여','30대_남',\n",
    "#                                '40대_여','40대_남','50대_여','50대_남','60대_여','60대_남',]\n",
    "# table11\n",
    "\n",
    "# plt.figure(figsize=(18,12))\n",
    "# sns.countplot(data=table11, figsize=(16,16))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2b954ff8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "fig=plt.figure(figsize=(18,12))\n",
    "ax1=fig.add_subplot(3,2,1)   \n",
    "ax1.plot(table7['10대'], marker='o', color='skyblue')\n",
    "ax1.plot(table8['10대'], marker='o', color='blue')\n",
    "ax1.set_title('10대')\n",
    "\n",
    "ax2=fig.add_subplot(3,2,2)   \n",
    "ax2.plot(table7['20대'], marker='o', color='pink')\n",
    "ax2.plot(table8['20대'], marker='o', color='m')\n",
    "ax2.set_title('20대')\n",
    "\n",
    "ax2=fig.add_subplot(3,2,3)   \n",
    "ax2.plot(table7['30대'], marker='o', color='wheat')\n",
    "ax2.plot(table8['30대'], marker='o', color='darkorange')\n",
    "ax2.set_title('30대')\n",
    "\n",
    "ax2=fig.add_subplot(3,2,4)   \n",
    "ax2.plot(table7['40대'], marker='o', color='lightgreen')\n",
    "ax2.plot(table8['40대'], marker='o', color='green')\n",
    "ax2.set_title('40대')\n",
    "\n",
    "ax2=fig.add_subplot(3,2,5)   \n",
    "ax2.plot(table7['50대'], marker='o', color='lightsalmon')\n",
    "ax2.plot(table8['50대'], marker='o', color='red')\n",
    "ax2.set_title('50대')\n",
    "\n",
    "ax2=fig.add_subplot(3,2,6)   \n",
    "ax2.plot(table7['60대'], marker='o', color='yellow')\n",
    "ax2.plot(table8['60대'], marker='o', color='gold')\n",
    "ax2.set_title('60대')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "990ed3ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 연령별 유입경로 분석\n",
    "quantity_funnel=df.groupby(['age_c','funnels']).sum()[['quantity','amount']]\n",
    "quantity_funnel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bdaaeb2",
   "metadata": {},
   "outputs": [],
   "source": [
    "quantity_funnel = quantity_funnel.reset_index()\n",
    "quantity_funnel.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c91d40c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "get_max = lambda x:x.loc[x.quantity.idxmax()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4682dadc",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "quantity_funnel.groupby('cusno').apply(get_max)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f12ec71a",
   "metadata": {},
   "outputs": [],
   "source": [
    "result = quantity_funnel.groupby('cusno').apply(get_max).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4f46f4ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 유입경로별 주문량이 많은 연령대 구하기\n",
    "# 개별화된 마케팅 진행 가능하다\n",
    "result.groupby('funnels').groups"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b9109584",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 유입경로 지정해서 cusno 확인\n",
    "result.loc[result.groupby('funnels').groups['쿠팡 어플'].values]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9520806",
   "metadata": {},
   "source": [
    "## 구매 감소 예측 모델"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "885a80f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "table4.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cdbc0c0e",
   "metadata": {},
   "outputs": [],
   "source": [
    "len(set(cusno))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9f1bc1ca",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "407dc33c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fb29f140",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8345acc0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "53f7b252",
   "metadata": {},
   "source": [
    "### 모델링 평가"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a1120e44",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Decision Tree\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "dt_model = DecisionTreeClassifier()\n",
    "dt_model.fit(X_train, y_train)\n",
    "dt_pred = dt_model.predict(X_test)\n",
    "\n",
    "print(dt_pred[0:10])\n",
    "print(y_test.values[0:10])\n",
    "\n",
    "accuracy = accuracy_score(y_test, dt_pred)\n",
    "print('dt 예측 정확도 :', accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "54d45b5e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Random Forest\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "rf_model = RandomForestClassifier()\n",
    "rf_model.fit(X_train, y_train)\n",
    "rf_pred = rf_model.predict(X_test)\n",
    "\n",
    "rf_accuracy = accuracy_score(y_test, rf_pred)\n",
    "print('rf 예측 정확도 :', rf_accuracy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4dd081e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Logistic Regression\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "lr_model = LogisticRegression(random_state=0)\n",
    "lr_model.fit(X_train,y_train)\n",
    "lr_pred = lr_model.predict(X_test)\n",
    "\n",
    "lr_accuracy = accuracy_score(y_test, lr_pred)\n",
    "print('lr 예측 정확도 :', accuracy)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": false,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
